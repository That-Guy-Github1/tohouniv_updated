th_set_default_danmaku_class = {
	set_global_flag = th_danmaku_class_default_$class$
}

th_set_default_danmaku_type = {
	set_global_flag = th_danmaku_creature_type_default_$type$
}

th_initialize_danmaku_definitions = {
	1 = {
		#Combat related stuff:
		# 1d4 roll on initiative
		set_variable = { which = th_danmaku_default_initiative_die_num			value = 1 }
		set_variable = { which = th_danmaku_default_initiative_die				value = 4 }
		# 1d20 hit dice
		set_variable = { which = th_danmaku_default_hit_die_num					value = 1 }
		set_variable = { which = th_danmaku_default_hit_die						value = 20 }
		# Crit damage factor, need to roll a 1d20
		set_variable = { which = th_danmaku_default_crit_damage_multiplier		value = 2 }
		set_variable = { which = th_danmaku_default_crit_die_num				value = 1 }
		set_variable = { which = th_danmaku_default_crit_die					value = 20 }
	
		#Rewards related stuff:
		# Gold
		set_variable = { which = th_danmaku_default_gold_gain_activated			value = 1 }		#Put to 0 to deactivate gold from winning danmaku duels
		set_variable = { which = th_danmaku_default_gold_reward_scale_active	value = 1 }		#Put to 0 to deactivate gold scaling with enemy levels
		set_variable = { which = th_danmaku_default_gold_reward_base 			value = 200 }	#How much gold you get on a base level
		set_variable = { which = th_danmaku_default_gold_reward_scale 			value = 100 }	#How much gold you get additionally per enemy level
		# Monarch Power
		set_variable = { which = th_danmaku_default_power_gain_activated		value = 1 }		#Put to 0 to deactivate monarch power from winning danmaku duels
		set_variable = { which = th_danmaku_default_power_reward_scale_active	value = 1 }		#Put to 0 to deactivate monarch power scaling with enemy levels
		set_variable = { which = th_danmaku_default_power_type					value = 0 }		#What type of power you get, 0 = randomized, 
																								#1 = ADM power, 2 = DIP power, 3 = MIL power, 4 = ALL of them
		set_variable = { which = th_danmaku_default_power_reward_base 			value = 40 }	#How much monarch power you get on a base level
		set_variable = { which = th_danmaku_default_power_reward_scale 			value = 20 }	#How much monarch power you get additionally per enemy level

		#Additional setting:
		set_variable = { which = th_danmaku_default_setting_ruler_death 		value = 0 }		#Rulers can actualy die when their live drops below 0, set to 0 to deactivate

		#Setup related stuff:
		# Default class
		th_set_default_danmaku_class = { class = warrior }
		th_set_default_danmaku_type = { type = human }
		# Basic Stats
		set_variable = { which = th_danmaku_default_max_health					value = 100 }
		set_variable = { which = th_danmaku_default_max_mana					value = 20 }
		# Regen
		set_variable = { which = th_danmaku_default_hpy							value = 10 }	#Health points per year
		set_variable = { which = th_danmaku_default_mpy							value = 1 }		#Mana points per year
		# Initiative + Hit
		set_variable = { which = th_danmaku_default_ini_bonus					value = 0 }
		set_variable = { which = th_danmaku_default_hit_bonus					value = 0 }
		# Attack
		set_variable = { which = th_danmaku_default_attack_bonus				value = 0 }		#The flat attack damage bonus
		set_variable = { which = th_danmaku_default_attack_die					value = 10 }	#The die you roll for damage
		set_variable = { which = th_danmaku_default_attack_die_num				value = 1 }		#The amount of die you roll for damage
		set_variable = { which = th_danmaku_default_crit_roll_needed			value = 20 }	#Need to roll a 20 for a critical hit
		# Defense
		set_variable = { which = th_danmaku_default_armor_class					value = 10 }
		set_variable = { which = th_danmaku_default_resistance					value = 0 }		#Damage gets reduced by so much %
		# Reward modifier
		set_variable = { which = th_danmaku_default_gold_gain					value = 0 }
		set_variable = { which = th_danmaku_default_power_gain					value = 0 }
		# Levels
		set_variable = { which = th_danmaku_default_max_level					value = 20 }
		set_variable = { which = th_danmaku_default_start_level					value = 1 }
		set_variable = { which = th_danmaku_default_exp_increase				value = 50 }
		set_variable = { which = th_danmaku_default_level_1_exp 				value = 100 }
	}
}

th_set_default_danmaku_stats = {
	1 = {
		set_variable = { which = th_danmaku_default_max_health_transfer 		which = th_danmaku_default_max_health }
		#set_variable = { which = th_danmaku_default_max_mana_transfer			which = th_danmaku_default_max_mana }
		#set_variable = { which = th_danmaku_default_hpy_transfer				which = th_danmaku_default_hpy }
		#set_variable = { which = th_danmaku_default_mpy_transfer				which = th_danmaku_default_mpy }
		#set_variable = { which = th_danmaku_default_ini_bonus_transfer			which = th_danmaku_default_ini_bonus }
		#set_variable = { which = th_danmaku_default_hit_bonus_transfer			which = th_danmaku_default_hit_bonus }
		#set_variable = { which = th_danmaku_default_attack_bonus_transfer		which = th_danmaku_default_attack_bonus }
		#set_variable = { which = th_danmaku_default_attack_die_transfer			which = th_danmaku_default_attack_die }
		#set_variable = { which = th_danmaku_default_attack_die_num_transfer		which = th_danmaku_default_attack_die_num }
		#set_variable = { which = th_danmaku_default_crit_roll_needed_transfer	which = th_danmaku_default_crit_roll_needed }
		#set_variable = { which = th_danmaku_default_armor_class_transfer		which = th_danmaku_default_armor_class }
		#set_variable = { which = th_danmaku_default_resistance_transfer			which = th_danmaku_default_resistance }
		#set_variable = { which = th_danmaku_default_gold_gain_transfer			which = th_danmaku_default_gold_gain }
		#set_variable = { which = th_danmaku_default_power_gain_transfer			which = th_danmaku_default_power_gain }
		#set_variable = { which = th_danmaku_default_start_level_transfer		which = th_danmaku_default_start_level }
		#set_variable = { which = th_danmaku_default_level_1_exp_transfer		which = th_danmaku_default_level_1_exp }
		PREV = {
			set_variable = { which = th_danmaku_default_max_health_transfer 		which = PREV }
			#set_variable = { which = th_danmaku_default_max_mana_transfer			which = PREV }
			#set_variable = { which = th_danmaku_default_hpy_transfer				which = PREV }
			#set_variable = { which = th_danmaku_default_mpy_transfer				which = PREV }
			#set_variable = { which = th_danmaku_default_ini_bonus_transfer			which = PREV }
			#set_variable = { which = th_danmaku_default_hit_bonus_transfer			which = PREV }
			#set_variable = { which = th_danmaku_default_attack_bonus_transfer		which = PREV }
			#set_variable = { which = th_danmaku_default_attack_die_transfer			which = PREV }
			#set_variable = { which = th_danmaku_default_attack_die_num_transfer		which = PREV }
			#set_variable = { which = th_danmaku_default_crit_roll_needed_transfer	which = PREV }
			#set_variable = { which = th_danmaku_default_armor_class_transfer		which = PREV }
			#set_variable = { which = th_danmaku_default_resistance_transfer			which = PREV }
			#set_variable = { which = th_danmaku_default_gold_gain_transfer			which = PREV }
			#set_variable = { which = th_danmaku_default_power_gain_transfer			which = PREV }
			#set_variable = { which = th_danmaku_default_start_level_transfer		which = PREV }
			#set_variable = { which = th_danmaku_default_level_1_exp_transfer		which = PREV }
			
			set_variable = { which = th_danmaku_max_health 			which = th_danmaku_default_max_health_transfer }
			#set_variable = { which = th_danmaku_health 				which = th_danmaku_default_max_health_transfer }
			#set_variable = { which = th_danmaku_max_mana			which = th_danmaku_default_max_mana_transfer }
			#set_variable = { which = th_danmaku_mana				which = th_danmaku_default_max_mana_transfer }
			#set_variable = { which = th_danmaku_hpy					which = th_danmaku_default_hpy_transfer }
			#set_variable = { which = th_danmaku_mpy					which = th_danmaku_default_mpy_transfer }
			#set_variable = { which = th_danmaku_ini_bonus			which = th_danmaku_default_ini_bonus_transfer }
			#set_variable = { which = th_danmaku_hit_bonus			which = th_danmaku_default_hit_bonus_transfer }
			#set_variable = { which = th_danmaku_attack_bonus		which = th_danmaku_default_attack_bonus_transfer }
			#set_variable = { which = th_danmaku_attack_die			which = th_danmaku_default_attack_die_transfer }
			#set_variable = { which = th_danmaku_attack_die_num		which = th_danmaku_default_attack_die_num_transfer }
			#set_variable = { which = th_danmaku_crit_roll_needed	which = th_danmaku_default_crit_roll_needed_transfer }
			#set_variable = { which = th_danmaku_armor_class			which = th_danmaku_default_armor_class_transfer }
			#set_variable = { which = th_danmaku_resistance			which = th_danmaku_default_resistance_transfer }
			#set_variable = { which = th_danmaku_gold_gain			which = th_danmaku_default_gold_gain_transfer }
			#set_variable = { which = th_danmaku_power_gain			which = th_danmaku_default_power_gain_transfer }
			#set_variable = { which = th_danmaku_start_level			which = th_danmaku_default_start_level_transfer }
			#set_variable = { which = th_danmaku_level_1_exp			which = th_danmaku_default_level_1_exp_transfer }
		}
	}
}

th_set_danmaku_creature_type_human = {}
th_set_danmaku_creature_type_fairy = {}
th_set_danmaku_creature_type_vampire = {}
th_set_danmaku_creature_type_god = {}
th_set_danmaku_creature_type_demigod = {}
th_set_danmaku_creature_type_immortal = {}
th_set_danmaku_creature_type_undead = {}
th_set_danmaku_creature_type_half_phantom = {}
th_set_danmaku_creature_type_half_youkai = {}
th_set_danmaku_creature_type_youkai = {}
th_set_danmaku_creature_type_yama = {}
th_set_danmaku_creature_type_hermit = {}
th_set_danmaku_creature_type_lunarian = {}
th_set_danmaku_creature_type_oni = {}
th_set_danmaku_creature_type_demon = {}
th_set_danmaku_creature_type_devil = {}
th_set_danmaku_creature_type_tengu = {}
th_set_danmaku_creature_type_kappa = {}
th_set_danmaku_creature_type_tsukumogami = {}
th_set_danmaku_creature_type_yamanba = {}
th_set_danmaku_creature_type_nue = {}
th_set_danmaku_creature_type_satori = {}
th_set_danmaku_creature_type_angel = {}
th_set_danmaku_creature_type_shinigami = {}
th_set_danmaku_creature_type_inchling = {}
th_set_danmaku_creature_type_doll = {}
th_set_danmaku_creature_type_robot = {}
th_set_danmaku_creature_type = {
	hidden_effect = {
		set_ruler_flag = th_danmaku_creature_type_$type$
	}
	th_set_danmaku_creature_type_$type$ = yes
}

th_set_danmaku_class_barbarian = {}
th_set_danmaku_class_warrior = {}
th_set_danmaku_class_rogue = {}
th_set_danmaku_class_ranger = {}
th_set_danmaku_class_bard = {}
th_set_danmaku_class_monk = {}
th_set_danmaku_class_paladin = {}
th_set_danmaku_class_cleric = {}
th_set_danmaku_class_priest = {}
th_set_danmaku_class_druid = {}
th_set_danmaku_class_sorcerer = {}
th_set_danmaku_class_warlock = {}
th_set_danmaku_class_mage = {}
th_set_danmaku_class_artificer = {}
th_set_danmaku_class = {
	custom_tooltip = th_set_danmaku_class_$class$_tt
	hidden_effect = {
		set_ruler_flag = th_danmaku_class_$class$
	}
	th_set_danmaku_class_$class$ = yes
}


#Get the extra buffs from the danmaku modifiers
th_additional_danmaku_buff = {
	export_to_variable = {
		variable_name = th_additional_danmaku_power
		value = modifier:danmaku_power_constant
		who = ROOT
	}
	export_to_variable = {
		variable_name = th_danmaku_power_modifier
		value = modifier:danmaku_power_factor
		who = ROOT
	}
	set_variable = {
		which = th_danmaku_combat_power
		value = roll_power_gain
	}
	change_variable = {
		which = th_danmaku_power_modifier
		value = 1
	}
	if = {
		limit = {
			NOT = {
				check_variable = {
					which = th_danmaku_power_modifier
					value = 0
				}
			}
		}
		set_variable = {
			which = th_danmaku_power_modifier
			value = 0
		}
	}
	change_variable = {
		which = $fighting_variable$
		which = th_additional_danmaku_power
	}
	multiply_variable = {
		which = $fighting_variable$
		which = th_danmaku_power_modifier
	}
}

#Uses "type"
#Supports the following types:
# incident			- used for all incident related fights
# lesser_incident	- used for all smaller scope incidents related fights
# normal			- used for all the other fights
th_getruler_fighting_skill = {
	#Players Fighting Skills
	set_variable = {
		which = th_additional_fighting_boni
		value = $skill_boni$
	}
	#export_to_variable = {
	#	variable_name = th_current_military_skill
	#	value = MIL
	#	who = ROOT
	#}
	#export_to_variable = {
	#	variable_name = th_current_army_tradition_skill
	#	value = army_tradition
	#	who = ROOT
	#}
	#export_to_variable = {
	#	variable_name = th_current_religious_unity_skill
	#	value = religious_unity
	#	who = ROOT
	#}
	#export_to_variable = {
	#	variable_name = th_current_tolerance_to_the_true_faith_skill
	#	value = modifier:tolerance_own
	#	who = ROOT
	#}
	set_variable = {
		which = th_danmaku_combat_power
		value = roll_power_gain
	}

	#multiply_variable = {
	#	which = th_current_military_skill
	#	value = 100
	#}
	
	#multiply_variable = {
	#	which = th_current_army_tradition_skill
	#	value = 3
	#}
			
	#multiply_variable = {
	#	which = th_current_religious_unity_skill
	#	value = 50
	#}
			
	#multiply_variable = {
	#	which = th_current_tolerance_to_the_true_faith_skill
	#	value = 100
	#}
	
	set_variable = {
		which = th_current_fighting_skills_$type$
		value = 0
	}
	change_variable = {
		which = th_current_fighting_skills_$type$
		which = th_additional_fighting_boni
	}
	#change_variable = {
	#	which = th_current_fighting_skills_$type$
	#	which = th_current_military_skill
	#}
	#change_variable = {
	#	which = th_current_fighting_skills_$type$
	#	which = th_current_army_tradition_skill
	#}
	#change_variable = {
	#	which = th_current_fighting_skills_$type$
	#	which = th_current_religious_unity_skill
	#}
	#change_variable = {
	#	which = th_current_fighting_skills_$type$
	#	which = th_current_tolerance_to_the_true_faith_skill
	#}
	change_variable = {
		which = th_current_fighting_skills_$type$
		which = roll_power_gain
	}
	th_additional_danmaku_buff = {
		fighting_variable = th_current_fighting_skills_$type$
	}
}

th_getruler_diplomatic_skill = {
	#Players Fighting Skills
	set_variable = {
		which = th_additional_diplomatic_boni
		value = $skill_boni$
	}
	export_to_variable = {
		variable_name = th_current_diplomatic_skill
		value = DIP
		who = ROOT
	}
	export_to_variable = {
		variable_name = th_current_prestige_skill
		value = prestige
		who = ROOT
	}
	export_to_variable = {
		variable_name = th_current_repuation_skill
		value = modifier:diplomatic_reputation
		who = ROOT
	}
	export_to_variable = {
		variable_name = th_current_subjects_skill
		value = trigger_value:num_of_subjects
		who = ROOT
	}

	multiply_variable = {
		which = th_current_diplomatic_skill
		value = 100
	}
	
	multiply_variable = {
		which = th_current_prestige_skill
		value = 3
	}
			
	multiply_variable = {
		which = th_current_subjects_skill
		value = 50
	}
			
	multiply_variable = {
		which = th_current_repuation_skill
		value = 100
	}
			
	set_variable = {
		which = th_current_diplo_skills
		value = 0
	}
	
	change_variable = {
		which = th_current_diplo_skills
		which = th_additional_diplomatic_boni
	}
	change_variable = {
		which = th_current_diplo_skills
		which = th_current_diplomatic_skill
	}
	change_variable = {
		which = th_current_diplo_skills
		which = th_current_prestige_skill
	}
	change_variable = {
		which = th_current_diplo_skills
		which = th_current_subjects_skill
	}
	change_variable = {
		which = th_current_diplo_skills
		which = th_current_repuation_skill
	}
	th_additional_danmaku_buff = {
		fighting_variable = th_current_diplo_skills
	}
}

#Is used for danmaku fights through diplomatic action
th_danmaku_set_compare_variable = {
	set_variable = {
		which = th_current_fighting_skills_counter
		which = th_current_fighting_skills_$type$
	}
}

#Supports the following types:
# incident			- used for all incident related fights
# lesser_incident	- used for all smaller incidents related fights
# normal			- used for all the other fights
# diplomatic		- used for diplo fights only
th_defineopponent_fighting_skill = {
	#Draw Zone
	set_variable = {
		which = th_enemy_lower_border_draw_$type$
		value = 0
	}
	set_variable = {
		which = th_enemy_upper_border_draw_$type$
		value = 0
	}
	set_variable = {
		which = th_enemy_lower_border_draw_$type$
		which = $variable$
	}
	set_variable = {
		which = th_enemy_upper_border_draw_$type$
		which = $variable$
	}
			
	change_variable = {
		which = th_enemy_upper_border_draw_$type$
		value = 50
	}
	subtract_variable = {
		which = th_enemy_lower_border_draw_$type$
		value = 50
	}
			
	#Victory Zone
	set_variable = {
		which = th_enemy_border_great_victory_$type$
		value = 0
	}
	set_variable = {
		which = th_enemy_border_great_victory_$type$
		which = th_enemy_upper_border_draw_$type$
	}
			
	change_variable = {
		which = th_enemy_border_great_victory_$type$
		value = 125
	}
			
	#Defeat Zone
	set_variable = {
		which = th_enemy_border_great_defeat_$type$
		value = 0
	}
	set_variable = {
		which = th_enemy_border_great_defeat_$type$
		which = th_enemy_lower_border_draw_$type$
	}
	subtract_variable = {
		which = th_enemy_border_great_defeat_$type$
		value = 125
	}

	#Show Variable
	set_variable = {
		which = th_danmaku_duel_show_variable_$type$
		which = $variable$
	}
}

th_danmaku_incident_fight_ruler_and_opponent = {
	custom_tooltip = th_danmaku_incident_fight_ruler_and_opponent_tt
	#Player is waaaay stronger
	if = {
		limit = {
			check_variable = {
				which = th_current_fighting_skills_incident
				which = th_enemy_border_great_victory_incident
			}
			NOT = {
				check_variable = {
					which = th_enemy_upper_border_draw_incident
					which = th_current_fighting_skills_incident
				}
			}
		}
		random_list = {
			60 = {
				country_event = {
					id = th_danmaku_event.3
					days = 1
				}
			}
			40 = {
				country_event = {
					id = th_danmaku_event.2
					days = 1
				}	
			}
		}
	}
	#Player is stronger
	if = {
		limit = {
			check_variable = {
				which = th_current_fighting_skills_incident
				which = th_enemy_upper_border_draw_incident
			}
			NOT = {
				check_variable = {
					which = th_current_fighting_skills_incident
					which = th_enemy_border_great_victory_incident
				}
			}
		}
		random_list = {
			75 = {
				country_event = {
					id = th_danmaku_event.3
					days = 1
				}
			}
			15 = {
				country_event = {
					id = th_danmaku_event.2
					days = 1
				}			
			}
			10 = {
				country_event = {
					id = th_danmaku_event.4
					days = 1
				}			
			}
		}
	}
	#Opponent and Player are equal strong
	if = {
		limit = {
			check_variable = {
				which = th_current_fighting_skills_incident
				which = th_enemy_lower_border_draw_incident
			}
			NOT = {
				check_variable = {
					which = th_current_fighting_skills_incident
					which = th_enemy_upper_border_draw_incident
				}
			}
		}
		random_list = {
			65 = {
				country_event = {
					id = th_danmaku_event.4
					days = 1
				}
			}
			25 = {
				country_event = {
					id = th_danmaku_event.3
					days = 1
				}			
			}
			10 = {
				country_event = {
					id = th_danmaku_event.5
					days = 1
				}			
			}
		}
	}
	#Opponent is stronger
	if = {
		limit = {
			check_variable = {
				which = th_current_fighting_skills_incident
				which = th_enemy_border_great_defeat_incident
			}
			NOT = {
				check_variable = {
					which = th_current_fighting_skills_incident
					which = th_enemy_lower_border_draw_incident
				}
			}
		}
		random_list = {
			20 = {
				country_event = {
					id = th_danmaku_event.6
					days = 1
				}
			}
			60 = {
				country_event = {
					id = th_danmaku_event.5
					days = 1
				}			
			}
			20 = {
				country_event = {
					id = th_danmaku_event.4
					days = 1
				}			
			}
		}
	}
	#Opponent is waaaay stronger
	if = {
		limit = {
			check_variable = {
				which = th_enemy_border_great_defeat_incident
				which = th_current_fighting_skills_incident
			}
		}
		random_list = {
			50 = {
				country_event = {
					id = th_danmaku_event.6
					days = 1
				}
			}
			40 = {
				country_event = {
					id = th_danmaku_event.5
					days = 1
				}			
			}
			10 = {
				country_event = {
					id = th_danmaku_event.4
					days = 1
				}			
			}
		}
	}
}

#Use th_empty_event.1 for win/draw/lose events if you don't have any additional events following the fight
th_danmaku_lesser_incident_fight_ruler_and_opponent = {
	custom_tooltip = th_danmaku_lesser_incident_fight_ruler_and_opponent_tt
	#Player is waaaay stronger
	if = {
		limit = {
			check_variable = {
				which = th_current_fighting_skills_lesser_incident
				which = th_enemy_border_great_victory_lesser_incident
			}
			NOT = {
				check_variable = {
					which = th_enemy_upper_border_draw_lesser_incident
					which = th_current_fighting_skills_lesser_incident
				}
			}
		}
		random_list = {
			60 = {
				country_event = {
					id = th_danmaku_event.9
					days = 1
				}
			}
			40 = {
				country_event = {
					id = th_danmaku_event.8
					days = 1
				}	
			}
		}
		hidden_effect = {
			country_event = {
				id = $win_event$
				days = $days$
			}
		}
	}
	#Player is stronger
	if = {
		limit = {
			check_variable = {
				which = th_current_fighting_skills_lesser_incident
				which = th_enemy_upper_border_draw_lesser_incident
			}
			NOT = {
				check_variable = {
					which = th_current_fighting_skills_lesser_incident
					which = th_enemy_border_great_victory_lesser_incident
				}
			}
		}
		random_list = {
			75 = {
				country_event = {
					id = th_danmaku_event.9
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $win_event$
						days = $days$
					}
				}
			}
			15 = {
				country_event = {
					id = th_danmaku_event.8
					days = 1
				}	
				hidden_effect = {
					country_event = {
						id = $win_event$
						days = $days$
					}
				}		
			}
			10 = {
				country_event = {
					id = th_danmaku_event.10
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $draw_event$
						days = $days$
					}
				}
			}
		}
	}
	#Opponent and Player are equal strong
	if = {
		limit = {
			check_variable = {
				which = th_current_fighting_skills_lesser_incident
				which = th_enemy_lower_border_draw_lesser_incident
			}
			NOT = {
				check_variable = {
					which = th_current_fighting_skills_lesser_incident
					which = th_enemy_upper_border_draw_lesser_incident
				}
			}
		}
		random_list = {
			65 = {
				country_event = {
					id = th_danmaku_event.10
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $draw_event$
						days = $days$
					}
				}
			}
			25 = {
				country_event = {
					id = th_danmaku_event.9
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $win_event$
						days = $days$
					}
				}
			}
			10 = {
				country_event = {
					id = th_danmaku_event.11
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $defeat_event$
						days = $days$
					}
				}	
			}
		}
	}
	#Opponent is stronger
	if = {
		limit = {
			check_variable = {
				which = th_current_fighting_skills_lesser_incident
				which = th_enemy_border_great_defeat_lesser_incident
			}
			NOT = {
				check_variable = {
					which = th_current_fighting_skills_lesser_incident
					which = th_enemy_lower_border_draw_lesser_incident
				}
			}
		}
		random_list = {
			20 = {
				country_event = {
					id = th_danmaku_event.12
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $defeat_event$
						days = $days$
					}
				}	
			}
			60 = {
				country_event = {
					id = th_danmaku_event.11
					days = 1
				}	
				hidden_effect = {
					country_event = {
						id = $defeat_event$
						days = $days$
					}
				}			
			}
			20 = {
				country_event = {
					id = th_danmaku_event.10
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $draw_event$
						days = $days$
					}
				}
			}
		}
	}
	#Opponent is waaaay stronger
	if = {
		limit = {
			check_variable = {
				which = th_enemy_border_great_defeat_lesser_incident
				which = th_current_fighting_skills_lesser_incident
			}
		}
		random_list = {
			50 = {
				country_event = {
					id = th_danmaku_event.12
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $defeat_event$
						days = $days$
					}
				}	
			}
			40 = {
				country_event = {
					id = th_danmaku_event.11
					days = 1
				}	
				hidden_effect = {
					country_event = {
						id = $defeat_event$
						days = $days$
					}
				}			
			}
			10 = {
				country_event = {
					id = th_danmaku_event.10
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $draw_event$
						days = $days$
					}
				}
			}
		}
	}
}

#Use th_empty_event.1 for win/draw/lose events if you don't have any additional events following the fight
th_danmaku_normal_fight_ruler_and_opponent = {
	custom_tooltip = th_danmaku_normal_fight_ruler_and_opponent_tt
	#Player is waaaay stronger
	if = {
		limit = {
			check_variable = {
				which = th_current_fighting_skills_normal
				which = th_enemy_border_great_victory_normal
			}
			NOT = {
				check_variable = {
					which = th_enemy_upper_border_draw_normal
					which = th_current_fighting_skills_normal
				}
			}
		}
		random_list = {
			60 = {
				country_event = {
					id = th_danmaku_event.9
					days = 1
				}
			}
			40 = {
				country_event = {
					id = th_danmaku_event.8
					days = 1
				}	
			}
		}
		hidden_effect = {
			country_event = {
				id = $win_event$
				days = $days$
			}
		}
	}
	#Player is stronger
	if = {
		limit = {
			check_variable = {
				which = th_current_fighting_skills_normal
				which = th_enemy_upper_border_draw_normal
			}
			NOT = {
				check_variable = {
					which = th_current_fighting_skills_normal
					which = th_enemy_border_great_victory_normal
				}
			}
		}
		random_list = {
			75 = {
				country_event = {
					id = th_danmaku_event.9
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $win_event$
						days = $days$
					}
				}
			}
			15 = {
				country_event = {
					id = th_danmaku_event.8
					days = 1
				}	
				hidden_effect = {
					country_event = {
						id = $win_event$
						days = $days$
					}
				}		
			}
			10 = {
				country_event = {
					id = th_danmaku_event.10
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $draw_event$
						days = $days$
					}
				}
			}
		}
	}
	#Opponent and Player are equal strong
	if = {
		limit = {
			check_variable = {
				which = th_current_fighting_skills_normal
				which = th_enemy_lower_border_draw_normal
			}
			NOT = {
				check_variable = {
					which = th_current_fighting_skills_normal
					which = th_enemy_upper_border_draw_normal
				}
			}
		}
		random_list = {
			65 = {
				country_event = {
					id = th_danmaku_event.10
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $draw_event$
						days = $days$
					}
				}
			}
			25 = {
				country_event = {
					id = th_danmaku_event.9
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $win_event$
						days = $days$
					}
				}
			}
			10 = {
				country_event = {
					id = th_danmaku_event.11
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $defeat_event$
						days = $days$
					}
				}	
			}
		}
	}
	#Opponent is stronger
	if = {
		limit = {
			check_variable = {
				which = th_current_fighting_skills_normal
				which = th_enemy_border_great_defeat_normal
			}
			NOT = {
				check_variable = {
					which = th_current_fighting_skills_normal
					which = th_enemy_lower_border_draw_normal
				}
			}
		}
		random_list = {
			20 = {
				country_event = {
					id = th_danmaku_event.12
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $defeat_event$
						days = $days$
					}
				}	
			}
			60 = {
				country_event = {
					id = th_danmaku_event.11
					days = 1
				}	
				hidden_effect = {
					country_event = {
						id = $defeat_event$
						days = $days$
					}
				}			
			}
			20 = {
				country_event = {
					id = th_danmaku_event.10
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $draw_event$
						days = $days$
					}
				}
			}
		}
	}
	#Opponent is waaaay stronger
	if = {
		limit = {
			check_variable = {
				which = th_enemy_border_great_defeat_normal
				which = th_current_fighting_skills_normal
			}
		}
		random_list = {
			50 = {
				country_event = {
					id = th_danmaku_event.12
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $defeat_event$
						days = $days$
					}
				}	
			}
			40 = {
				country_event = {
					id = th_danmaku_event.11
					days = 1
				}	
				hidden_effect = {
					country_event = {
						id = $defeat_event$
						days = $days$
					}
				}			
			}
			10 = {
				country_event = {
					id = th_danmaku_event.10
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $draw_event$
						days = $days$
					}
				}
			}
		}
	}
}

th_danmaku_diplo_fight_ruler_and_opponent = {
	custom_tooltip = th_danmaku_diplo_fight_ruler_and_opponent_tt
	#Player is waaaay stronger
	if = {
		limit = {
			check_variable = {
				which = th_current_diplo_skills
				which = th_enemy_border_great_victory_normal
			}
			NOT = {
				check_variable = {
					which = th_enemy_upper_border_draw_normal
					which = th_current_diplo_skills
				}
			}
		}
		random_list = {
			60 = {
				country_event = {
					id = th_danmaku_event.22
					days = 1
				}
			}
			40 = {
				country_event = {
					id = th_danmaku_event.21
					days = 1
				}	
			}
		}
		hidden_effect = {
			country_event = {
				id = $win_event$
				days = $days$
			}
		}
	}
	#Player is stronger
	if = {
		limit = {
			check_variable = {
				which = th_current_diplo_skills
				which = th_enemy_upper_border_draw_normal
			}
			NOT = {
				check_variable = {
					which = th_current_diplo_skills
					which = th_enemy_border_great_victory_normal
				}
			}
		}
		random_list = {
			75 = {
				country_event = {
					id = th_danmaku_event.22
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $win_event$
						days = $days$
					}
				}
			}
			15 = {
				country_event = {
					id = th_danmaku_event.21
					days = 1
				}			
				hidden_effect = {
					country_event = {
						id = $win_event$
						days = $days$
					}
				}
			}
			10 = {
				country_event = {
					id = th_danmaku_event.23
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $draw_event$
						days = $days$
					}
				}
			}
		}
	}
	#Opponent and Player are equal strong
	if = {
		limit = {
			check_variable = {
				which = th_current_diplo_skills
				which = th_enemy_lower_border_draw_normal
			}
			NOT = {
				check_variable = {
					which = th_current_diplo_skills
					which = th_enemy_upper_border_draw_normal
				}
			}
		}
		random_list = {
			65 = {
				country_event = {
					id = th_danmaku_event.23
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $draw_event$
						days = $days$
					}
				}
			}
			25 = {
				country_event = {
					id = th_danmaku_event.22
					days = 1
				}			
				hidden_effect = {
					country_event = {
						id = $win_event$
						days = $days$
					}
				}
			}
			10 = {
				country_event = {
					id = th_danmaku_event.24
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $defeat_event$
						days = $days$
					}
				}
			}
		}
	}
	#Opponent is stronger
	if = {
		limit = {
			check_variable = {
				which = th_current_diplo_skills
				which = th_enemy_border_great_defeat_normal
			}
			NOT = {
				check_variable = {
					which = th_enemy_lower_border_draw_normal
					which = th_enemy_border_great_defeat_normal
				}
			}
		}
		random_list = {
			20 = {
				country_event = {
					id = th_danmaku_event.25
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $defeat_event$
						days = $days$
					}
				}
			}
			60 = {
				country_event = {
					id = th_danmaku_event.24
					days = 1
				}		
				hidden_effect = {
					country_event = {
						id = $defeat_event$
						days = $days$
					}
				}	
			}
			20 = {
				country_event = {
					id = th_danmaku_event.23
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $draw_event$
						days = $days$
					}
				}
			}
		}
	}
	#Opponent is waaaay stronger
	if = {
		limit = {
			check_variable = {
				which = th_enemy_border_great_defeat_normal
				which = th_current_diplo_skills
			}
		}
		random_list = {
			50 = {
				country_event = {
					id = th_danmaku_event.25
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $defeat_event$
						days = $days$
					}
				}
			}
			40 = {
				country_event = {
					id = th_danmaku_event.24
					days = 1
				}	
				hidden_effect = {
					country_event = {
						id = $defeat_event$
						days = $days$
					}
				}		
			}
			10 = {
				country_event = {
					id = th_danmaku_event.23
					days = 1
				}
				hidden_effect = {
					country_event = {
						id = $draw_event$
						days = $days$
					}
				}
			}
		}
	}
}

#Increases the counter for the danmaku fights the country has won
th_danmaku_won_a_danmaku_fight = {
	hidden_effect = {
		if = {
			limit = { has_country_flag = th_danmaku_counts_won_danmaku_fights }
			change_variable = {
				which = th_danmaku_won_danmaku_fights
				value = 1
			}
		}
		else = {
			set_country_flag = th_danmaku_counts_won_danmaku_fights
			set_variable = {
				which = th_danmaku_won_danmaku_fights
				value = 1
			}
		}
	}
}