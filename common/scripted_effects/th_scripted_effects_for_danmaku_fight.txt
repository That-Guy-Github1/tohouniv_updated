th_prepare_country_for_danmaku_duel = {
	set_country_flag = th_is_in_a_danmaku_duel
	set_ruler_flag = th_ruler_is_in_a_danmaku_duel
	set_variable = {
		which = th_danmaku_action_points
		which = th_danmaku_max_action_points
	}
	th_update_danmaku_action_point_bar = yes
}

th_assign_country_to_danmaku_duel_instance = {
	th_prepare_country_for_danmaku_duel = yes
	set_ruler_flag = th_is_in_danmaku_duel_instance_$instance$
	set_ruler_flag = th_is_country_$country_id$_in_danmaku_duel_of_$instance$
	save_global_event_target_as = th_danmaku_duelist_of_id_$country_id$_of_instance_$instance$
}

th_setup_danmaku_duel_instance = {
	set_variable = {
		which = th_danmaku_duel_instance_$instance$_round_counter
		value = 1
	}
	set_variable = {
		which = th_danmaku_duel_instance_$instance$_opponent_turn	#Is 0 for the first striker, is 1 for the second striker. Gets reset to 0 after the second striker ends turn so initiative can be rerolled.
		value = 0
	}
	set_variable = {
		which = th_danmaku_duel_instance_$instance$_turn_duration_counter
		which = th_dnamaku_default_turn_duration
	}
	set_variable = {
		which = th_danmaku_duel_logged_actions_for_instance_$instance$
		value = 0
	}
	set_province_flag = th_danmaku_duel_instance_$instance$_online
}

th_create_danmaku_duel_instance = {
	if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 1 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 1 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 1 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 1 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 2 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 2 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 2 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 2 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 3 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 3 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 3 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 3 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 4 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 4 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 4 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 4 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 5 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 5 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 5 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 5 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 6 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 6 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 6 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 6 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 7 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 7 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 7 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 7 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 8 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 8 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 8 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 8 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 9 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 9 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 9 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 9 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 10 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 10 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 10 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 10 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 11 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 11 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 11 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 11 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 12 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 12 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 12 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 12 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 13 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 13 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 13 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 13 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 14 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 14 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 14 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 14 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 15 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 15 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 15 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 15 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 16 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 16 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 16 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 16 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 17 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 17 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 17 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 17 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 18 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 18 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 18 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 18 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 19 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 19 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 19 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 19 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 20 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 20 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 20 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 20 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 21 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 21 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 21 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 21 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 22 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 22 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 22 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 22 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 23 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 23 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 23 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 23 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 24 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 24 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 24 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 24 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 25 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 25 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 25 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 25 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 26 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 26 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 26 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 26 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 27 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 27 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 27 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 27 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 28 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 28 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 28 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 28 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 29 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 29 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 29 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 29 }
	}
	else_if = {
		limit = { is_variable_equal = { which = th_danmaku_duel_counter   value = 30 } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 30 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 30 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 30 }
	}
	else = {
		log = "Too many Danmaku Duel instances were called. Could not add $country_1$ and $country_2$ to a duel."
	}
}

th_roll_initiative = {
	custom_tooltip = th_roll_initiative_tt
	hidden_effect = {
		set_variable = {
			which = th_danmaku_rolled_initiative
			value = 0
		}
		random_list = {
			1 = { change_variable = { which = th_danmaku_rolled_initiative value = 1 } }
			1 = { change_variable = { which = th_danmaku_rolled_initiative value = 2 } }
			1 = { change_variable = { which = th_danmaku_rolled_initiative value = 3 } }
			1 = { change_variable = { which = th_danmaku_rolled_initiative value = 4 } }
		}
		change_variable = {
			which = th_danmaku_rolled_initiative
			which = th_danmaku_ini_bonus
		}
	}
}
th_alternative_roll_initiative = {	#I LOOOOOOOOVE EU4's inability to have random numbers
	custom_tooltip = th_roll_initiative_tt
	hidden_effect = {
		export_to_variable = {
			which = th_danmaku_randomizer
			value = max_manpower
		}
		export_to_variable = {
			which = $variable$
			value = manpower
		}
		change_variable = {
			which = th_danmaku_randomizer
			which = $variable$
		}
		divide_variable = {
			which = th_danmaku_randomizer
			value = 2
		}
		set_variable = {
			which = $variable$
			which = th_danmaku_randomizer
		}
		random = {
			chance = 0.25
			change_variable = {
				which = th_danmaku_randomizer
				value = 1
			}
		}
		random = {
			chance = 0.25
			change_variable = {
				which = th_danmaku_randomizer
				value = 2
			}
		}
		random = {
			chance = 0.25
			change_variable = {
				which = th_danmaku_randomizer
				value = 3
			}
		}
		divide_variable = {
			which = th_danmaku_randomizer
			value = 4
		}
		round_variable = {
			which = th_danmaku_randomizer
			value = -1
		}
		multiply_variable = {
			which = th_danmaku_randomizer
			value = 4
		}
		subtract_variable = {
			which = $variable$
			which = th_danmaku_randomizer
		}
		round_variable = {
			which = $variable$
			value = 0
		}
		change_variable = {
			which = $variable$
			which = $bonus$
		}
	}
}

th_roll_initiative_for_current_instance = {
	custom_tooltip = th_roll_initiative_for_current_instance_tt
	hidden_effect = {
		$country_1$ = { th_roll_initiative = yes }
		$country_2$ = {
			th_alternative_roll_initiative = {
				variable = th_danmaku_rolled_initiative
				bonus = th_danmaku_ini_bonus
			}
			set_variable = {
				which = th_danmaku_rolled_initiative_transfer
				which = th_danmaku_rolled_initiative
			}
			while = {
				limit = {
					NOT = {
						is_variable_equal = {
							which = th_danmaku_rolled_initiative_transfer
							value = 0
						}
					}
				}
				if = {
					limit = { check_variable = { which = th_danmaku_rolled_initiative_transfer value = 1 } }
					change_variable = { which = th_danmaku_rolled_initiative_transfer value = -1 }
				}
				else = {
					change_variable = { which = th_danmaku_rolled_initiative_transfer value = 1 }
				}
				$country_1$ = { change_variable = { which = th_danmaku_rolled_initiative_comperator value = 1 } }
			}
		}
		$country_1$ = {
			if = {
				limit = {
					check_variable = {
						which = th_danmaku_rolled_initiative
						which = th_danmaku_rolled_initiative_comperator
					}
				}
				set_ruler_flag = th_danmaku_has_turn_ownership
				$country_2$ = {
					set_ruler_flag = th_danmaku_has_not_turn_ownership
				}
			}
			else = {
				set_ruler_flag = th_danmaku_has_not_turn_ownership
				$country_2$ = {
					set_ruler_flag = th_danmaku_has_turn_ownership
				}
			}
		}
	}
}

th_roll_initiative_for_root_scope = {
	$opponent$ = { custom_tooltip = th_roll_initiative_root_for_current_instance_tt }
	hidden_effect = {
		$opponent$ = { th_roll_initiative = yes }
		th_alternative_roll_initiative = {
			variable = th_danmaku_rolled_initiative
			bonus = th_danmaku_ini_bonus
		}
		set_variable = {
			which = th_danmaku_rolled_initiative_transfer
			which = th_danmaku_rolled_initiative
		}
		while = {
			limit = {
				NOT = {
					is_variable_equal = {
						which = th_danmaku_rolled_initiative_transfer
						value = 0
					}
				}
			}
			if = {
				limit = { check_variable = { which = th_danmaku_rolled_initiative_transfer value = 1 } }
				change_variable = { which = th_danmaku_rolled_initiative_transfer value = -1 }
			}
			else = {
				change_variable = { which = th_danmaku_rolled_initiative_transfer value = 1 }
			}
			$opponent$ = { change_variable = { which = th_danmaku_rolled_initiative_comperator value = 1 } }
		}
		$opponent$ = {
			if = {
				limit = {
					check_variable = {
						which = th_danmaku_rolled_initiative
						which = th_danmaku_rolled_initiative_comperator
					}
				}
				set_ruler_flag = th_danmaku_has_turn_ownership
				prev = {
					set_ruler_flag = th_danmaku_has_not_turn_ownership
				}
			}
			else = {
				set_ruler_flag = th_danmaku_has_not_turn_ownership
				prev = {
					set_ruler_flag = th_danmaku_has_turn_ownership
				}
			}
		}
	}
}


th_create_danmaku_duel_against_country = {
	if = {
		limit = {
			tag = $country_1$
			tag = $country_2$
		}
		log = "Called a Danmaku Duel against itself. That is not possible."
	}
	else_if = {
		limit = {
			OR = {
				$country_1$ = { th_is_in_a_danmaku_duel = yes }
				$country_2$ = { th_is_in_a_danmaku_duel = yes }
			}
		}
		log = "Either country is already in a danmaku duel."
	}
	else = {
		if = {
			limit = { tag = $country_1$ }
			$country_2$ = { custom_tooltip = th_create_danmaku_duel_instance_against_root_tt }
		}
		else_if = {
			limit = { tag = $country_2$ }
			$country_1$ = { custom_tooltip = th_create_danmaku_duel_instance_against_root_tt }
		}
		else = {
			$country_1$ = { custom_tooltip = th_join_danmaku_duel_instance_tt }
			$country_2$ = { custom_tooltip = th_join_danmaku_duel_instance_tt }
			custom_tooltip = th_create_danmaku_duel_instance_tt
		}
		hidden_effect = {
			th_global_setup_danmaku_duels_data = yes
			1 = {
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = th_danmaku_duel_counter
								which = th_danmaku_max_duels
							}
						}
					}
					change_variable = {
						which = th_danmaku_duel_counter
						value = 1
					}
					th_create_danmaku_duel_instance = {
						country_1 = $country_1$
						country_2 = $country_2$
					}
					th_roll_initiative_for_current_instance = {
						country_1 = $country_1$
						country_2 = $country_2$
					}
				}
				else = {
					log = "Too many Danmaku Duel instances were called..."
				}
			}
		}
	}
}


th_change_danmaku_specific_instance_round = {
	hidden_effect = {
		1 = {
			if = {
				limit = { NOT = { check_variable = { which = th_danmaku_duel_instance_$instance$_opponent_turn value = 1 } } }
				1 = { set_variable = { which = th_danmaku_duel_instance_$instance$_opponent_turn value = 1 } }
			}
			else = {
				1 = {
					set_variable = { which = th_danmaku_duel_instance_$instance$_opponent_turn value = 0 }
					change_variable = { which = th_danmaku_duel_instance_$instance$_round_counter value = 1 }
				}
			}
			set_variable = {
				which = th_danmaku_duel_instance_$instance$_turn_duration_counter
				which = th_dnamaku_default_turn_duration
			}
		}
	}
	if = {
		limit = {
			1 = {
				NOT = { check_variable = { which = th_danmaku_duel_instance_$instance$_opponent_turn value = 0 } }
				check_variable = { which = th_danmaku_default_setting_reroll_initiative value = 1 }
			}
		}
		th_roll_initiative_for_root_scope = { opponent = $opponent$ }
	}
	else = {
		if = {
			limit = { $opponent$ = { th_has_turn_ownership = yes } }
			$opponent$ = {
				custom_tooltip = th_end_turn_for_this_ruler_tt
				clr_ruler_flag = th_danmaku_has_turn_ownership
				set_ruler_flag = th_danmaku_has_not_turn_ownership
			}
			custom_tooltip = th_start_turn_for_this_ruler_tt
			set_ruler_flag = th_danmaku_has_turn_ownership
			clr_ruler_flag = th_danmaku_has_not_turn_ownership
		}
		else = {
			$opponent$ = {
				custom_tooltip = th_start_turn_for_this_ruler_tt
				set_ruler_flag = th_danmaku_has_turn_ownership
				clr_ruler_flag = th_danmaku_has_not_turn_ownership
			}
			custom_tooltip = th_end_turn_for_this_ruler_tt
			clr_ruler_flag = th_danmaku_has_turn_ownership
			set_ruler_flag = th_danmaku_has_not_turn_ownership
		}
	}
}

#Solo Experience
#Following Touhou characters are supported:
# reimu, marisa, mima, konngara, sariel, rika, meira, kana, kotohime, ellen, rikako, chiyuri, yumemi, kurumi, elly, 
# gengetsu, mugetsu, yuuka, alice, yuki, mai, yumeko, shinki, rumia, cirno, daiyousei, meiling, koakuma, patchouli, 
# sakuya, remilia, flandre, satsuki, letty, chen, lily, prismriver, lunasa, merlin, lyrica, layla, youmu, youki, 
# yuyuko, ran, yukari, suika, wriggle, mystia, keine, tewi, reisen, eirin, kaguya, mokou, aya, medicine, komachi, 
# eiki, shizuha, minoriko, hina, nitori, momiji, sanae, kanako, suwako, iku, tenshi, kisume, yamame, parsee, yuugi, 
# satori, orin, okuu, koishi, nazrin, kogasa, ichirin, minamitsu, shou, byakuren, nue, hatate, kyouko, yoshika, 
# seiga, tojiko, futo, miko, mamizou, kokoro, wakasagihime, sekibanki, kagerou, benben, yatsuhashi, seija, shinmyoumaru, 
# raiko, sumireko, renko, maribel, seiran, ringo, doremy, sagune, clownpiece, junko, hecatia, toyohime, yorihime, 
# change, reisen_moon, joon, shion, sunny, star, luna, kasen, larva, nemuno, aunn, narumi, teireida, satonono, okina, 
# eika, urumi, kutaka, mayumi, keiki, yachie, saki, yuuma, mike, takane, sannyo, misumaru, tsukasa, megumu, chimata, 
# momoyo, son, enoko, chiyari, hisami, zanmu, rinnosuke, tokiko, miyoi, mizuchi, zun
th_create_danmaku_duel_against_unlanded_character = {
	custom_tooltip = th_create_danmaku_duel_against_unlanded_character_$target$_tt
	hidden_effect = {
		th_prepare_country_for_danmaku_duel = yes
		set_ruler_flag = th_is_duelling_an_unlanded_character
		set_ruler_flag = th_is_duelling_character_$target$
		th_roll_initiative_for_solo_fight = yes
		set_variable = {
			which = th_danmaku_unlanded_duel_round_counter
			value = 1
		}
		set_variable = {
			which = th_danmaku_unlanded_duel_opponent_turn
			value = 0
		}
		set_variable = {
			which = th_danmaku_unlanded_turn_duration
			value = 18
		}
		1 = {
			set_variable = {
				which = th_danmaku_default_turn_duration_transfer
				which = th_dnamaku_default_turn_duration
			}
			PREV = {
				set_variable = { which = th_danmaku_default_turn_duration_transfer 		which = PREV }
				set_variable = {
					which = th_danmaku_unlanded_turn_duration
					which = th_danmaku_default_turn_duration_transfer
				}
			}
		}
	}
}

th_roll_initiative_for_solo_fight = {
	custom_tooltip = th_roll_initiative_for_solo_fight_tt
	hidden_effect = {
		th_roll_initiative = yes
		th_alternative_roll_initiative = {
			variable = th_danmaku_unlanded_character_rolled_initiative
			bonus = th_danmaku_unlanded_character_ini_bonus
		}
		if = {
			limit = {
				check_variable = {
					which = th_danmaku_rolled_initiative
					which = th_danmaku_unlanded_character_rolled_initiative
				}
			}
			set_ruler_flag = th_danmaku_has_turn_ownership
			set_ruler_flag = th_danmaku_unlanded_character_not_turn_ownership
		}
		else = {
			set_ruler_flag = th_danmaku_unlanded_character_turn_ownership
			set_ruler_flag = th_danmaku_has_not_turn_ownership
		}
	}
}

th_end_turn_against_unlanded_character = {
	if = {
		limit = {
			NOT = {
				check_variable = {
					which = th_danmaku_unlanded_duel_opponent_turn
					value = 1
				}
			}
		}
		set_variable = {
			which = th_danmaku_unlanded_duel_opponent_turn
			value = 1
		}
		if = {
			limit = {
				has_ruler_flag = th_danmaku_has_turn_ownership
			}
			clr_ruler_flag = th_danmaku_has_turn_ownership
			clr_ruler_flag = th_danmaku_unlanded_character_not_turn_ownership
			set_ruler_flag = th_danmaku_unlanded_character_turn_ownership
			set_ruler_flag = th_danmaku_has_not_turn_ownership
		}
		else = {
			set_ruler_flag = th_danmaku_has_turn_ownership
			set_ruler_flag = th_danmaku_unlanded_character_not_turn_ownership
			clr_ruler_flag = th_danmaku_unlanded_character_turn_ownership
			clr_ruler_flag = th_danmaku_has_not_turn_ownership
		}
	}
	else = {
		set_variable = {
			which = th_danmaku_unlanded_duel_opponent_turn
			value = 0
		}
		change_variable = {
			which = th_danmaku_unlanded_duel_round_counter
			value = 1
		}
		th_roll_initiative_for_solo_fight = yes
	}
	1 = {
		set_variable = {
			which = th_danmaku_default_turn_duration_transfer
			which = th_dnamaku_default_turn_duration
		}
		PREV = {
			set_variable = { which = th_danmaku_default_turn_duration_transfer 		which = PREV }
			set_variable = {
				which = th_danmaku_unlanded_turn_duration
				which = th_danmaku_default_turn_duration_transfer
			}
		}
	}
}

#General Interaction mechanics
th_end_turn = {
	hidden_effect = {
		if = {
			limit = { th_is_not_duelling_an_unlanded_character = yes }
			th_select_enemy_event_target_and_do_effect = {
				effect = "
					th_change_danmaku_instance_round = { opponent = root }
				"
			}
		}
		else = {
			th_end_turn_against_unlanded_character = yes
		}
	}
}

th_monthly_danaku_duel_duration_reduction = {
	if = {
		limit = { 1 = { check_variable = { which = th_danmaku_duel_instance_$instance$_turn_duration_counter value = 0 } } }
		1 = {
			subtract_variable = {
				which = th_danmaku_duel_instance_$instance$_turn_duration_counter
				value = 1
			}
		}
		if = {
			limit = {
				1 = { NOT = { check_variable = { which = th_danmaku_duel_instance_$instance$_turn_duration_counter value = 1 } } }
				has_saved_global_event_target = th_danmaku_duelist_of_id_1_of_instance_$instance$
				has_saved_global_event_target = th_danmaku_duelist_of_id_2_of_instance_$instance$
			}
			if = {
				limit = { event_target:th_danmaku_duelist_of_id_1_of_instance_$instance$ = { th_has_turn_ownership = yes } }
				event_target:th_danmaku_duelist_of_id_1_of_instance_$instance$ = { th_change_danmaku_instance_round = { opponent = event_target:th_danmaku_duelist_of_id_2_of_instance_$instance$ } }
			}
			else = {
				event_target:th_danmaku_duelist_of_id_2_of_instance_$instance$ = { th_change_danmaku_instance_round = { opponent = event_target:th_danmaku_duelist_of_id_1_of_instance_$instance$ } }
			}
		}
	}
}

th_log_ability_for_current_actor_against_nobody = {
	if = {
		limit = { th_is_country_id_danmaku_duel = { country_id = 1 } }
		th_log_ability_for_current_instance = {
			actor = 1
			verb = $verb$
			article = $article$
			ability = $ability$
			ability_effect = $ability_effect$
			number_impact = $number_impact$
			is_damage = $is_damage$
			is_health = $is_health$
			is_mana = $is_mana$
			is_action_points = $is_action_points$
			is_critical = $is_critical$
		}
	}
	else = {
		th_log_ability_for_current_instance = {
			actor = 2
			verb = $verb$
			article = $article$
			ability = $ability$
			ability_effect = $ability_effect$
			number_impact = $number_impact$
			is_damage = $is_damage$
			is_health = $is_health$
			is_mana = $is_mana$
			is_action_points = $is_action_points$
			is_critical = $is_critical$
		}
	}
}
th_log_ability_for_current_actor_against_self = {
	if = {
		limit = { th_is_country_id_danmaku_duel = { country_id = 1 } }
		th_log_ability_for_current_instance = {
			actor = 1
			verb = $verb$
			article = $article$
			ability = $ability$
			preposition = $preposition$
			recipient = 1
			ability_effect = $ability_effect$
			number_impact = $number_impact$
			is_damage = $is_damage$
			is_health = $is_health$
			is_mana = $is_mana$
			is_action_points = $is_action_points$
			is_critical = $is_critical$
		}
	}
	else = {
		th_log_ability_for_current_instance = {
			actor = 2
			verb = $verb$
			article = $article$
			ability = $ability$
			preposition = $preposition$
			recipient = 2
			ability_effect = $ability_effect$
			number_impact = $number_impact$
			is_damage = $is_damage$
			is_health = $is_health$
			is_mana = $is_mana$
			is_action_points = $is_action_points$
			is_critical = $is_critical$
		}
	}
}
th_log_ability_for_current_actor_against_current_recipient = {
	if = {
		limit = { th_is_country_id_danmaku_duel = { country_id = 1 } }
		th_log_ability_for_current_instance = {
			actor = 1
			verb = $verb$
			article = $article$
			ability = $ability$
			preposition = $preposition$
			recipient = 2
			ability_effect = $ability_effect$
			number_impact = $number_impact$
			is_damage = $is_damage$
			is_health = $is_health$
			is_mana = $is_mana$
			is_action_points = $is_action_points$
			is_critical = $is_critical$
		}
	}
	else = {
		th_log_ability_for_current_instance = {
			actor = 2
			verb = $verb$
			article = $article$
			ability = $ability$
			preposition = $preposition$
			recipient = 1
			ability_effect = $ability_effect$
			number_impact = $number_impact$
			is_damage = $is_damage$
			is_health = $is_health$
			is_mana = $is_mana$
			is_action_points = $is_action_points$
			is_critical = $is_critical$
		}
	}
}
th_create_ability_combat_log = {
	th_log_ability_for_current_actor_against_$type$ = {
		verb = $verb$
		article = $article$
		ability = $ability$
		preposition = $preposition$
		ability_effect = $ability_effect$
		number_impact = $number_impact$
		is_damage = $is_damage$
		is_health = $is_health$
		is_mana = $is_mana$
		is_action_points = $is_action_points$
		is_critical = $is_critical$
	}
}