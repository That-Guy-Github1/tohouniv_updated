th_prepare_country_for_danmaku_duel = {
	set_country_flag = th_is_in_a_danmaku_duel
	set_ruler_flag = th_ruler_is_in_a_danmaku_duel
	set_variable = {
		which = th_danmaku_action_points
		which = th_danmaku_max_action_points
	}
	th_gui_update_danmaku_bar = { type = action_points }
}

th_assign_country_to_danmaku_duel_instance = {
	th_prepare_country_for_danmaku_duel = yes
	set_country_flag = th_is_in_danmaku_duel_instance_$instance$
	set_ruler_flag = th_is_country_$country_id$_in_danmaku_duel_of_$instance$
	save_global_event_target_as = th_danmaku_duelist_of_id_$country_id$_of_instance_$instance$
}

th_setup_danmaku_duel_instance = {
	set_variable = {
		which = th_danmaku_duel_instance_$instance$_round_counter
		value = 1
	}
	set_variable = {
		which = th_danmaku_duel_instance_$instance$_opponent_turn	#Is 0 for the first striker, is 1 for the second striker. Gets reset to 0 after the second striker ends turn so initiative can be rerolled.
		value = 0
	}
	set_variable = {
		which = th_danmaku_duel_instance_$instance$_turn_duration_counter
		which = th_dnamaku_default_turn_duration
	}
	set_variable = {
		which = th_danmaku_duel_logged_actions_for_instance_$instance$
		value = 0
	}
	set_province_flag = th_danmaku_duel_instance_$instance$_online
}

th_gui_set_enemy_bar = {
	$country_1$ = {
		set_variable = {
			which = th_danmaku_source_transfer_$type$
			which = th_danmaku_$type$_var
		}
		$country_2$ = {
			set_variable = {
				which = th_danmaku_source_transfer_$type$
				which = PREV
			}
			set_variable = { 
				which = th_danmaku_enemy_$type$_var 
				which = th_danmaku_source_transfer_$type$ 
			}
			set_variable = {
				which = th_danmaku_target_transfer_$type$
				which = th_danmaku_$type$_var
			}
			$country_1$ = {
				set_variable = {
					which = th_danmaku_target_transfer_$type$
					which = PREV
				}
				set_variable = { 
					which = th_danmaku_enemy_$type$_var 
					which = th_danmaku_target_transfer_$type$ 
				}
			}
		}
	}
}

th_create_danmaku_duel_instance = {
	if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_1_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 1 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 1 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 1 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_2_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 2 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 2 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 2 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_3_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 3 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 3 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 3 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_4_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 4 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 4 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 4 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_5_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 5 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 5 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 5 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_6_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 6 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 6 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 6 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_7_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 7 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 7 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 7 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_8_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 8 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 8 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 8 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_9_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 9 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 9 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 9 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_10_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 10 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 10 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 10 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_11_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 11 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 11 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 11 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_12_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 12 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 12 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 12 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_13_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 13 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 13 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 13 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_14_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 14 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 14 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 14 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_15_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 15 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 15 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 15 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_16_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 16 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 16 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 16 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_17_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 17 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 17 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 17 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_18_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 18 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 18 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 18 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_19_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 19 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 19 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 19 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_20_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 20 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 20 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 20 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_21_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 21 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 21 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 21 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_22_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 22 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 22 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 22 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_23_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 23 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 23 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 23 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_24_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 24 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 24 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 24 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_25_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 25 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 25 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 25 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_26_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 26 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 26 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 26 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_27_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 27 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 27 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 27 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_28_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 28 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 28 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 28 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_29_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 29 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 29 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 29 }
	}
	else_if = {
		limit = { NOT = { has_province_flag = th_danmaku_duel_instance_30_online } }
		$country_1$ = { th_assign_country_to_danmaku_duel_instance = { instance = 30 country_id = 1 } }
		$country_2$ = { th_assign_country_to_danmaku_duel_instance = { instance = 30 country_id = 2 } }
		th_setup_danmaku_duel_instance = { instance = 30 }
	}
	else = {
		log = "Too many Danmaku Duel instances were called. Could not add $country_1$ and $country_2$ to a duel."
	}
}

th_roll_initiative = {
	custom_tooltip = th_roll_initiative_tt
	hidden_effect = {
		set_variable = {
			which = th_danmaku_rolled_initiative
			value = 0
		}
		random_list = {
			1 = { change_variable = { which = th_danmaku_rolled_initiative value = 1 } }
			1 = { change_variable = { which = th_danmaku_rolled_initiative value = 2 } }
			1 = { change_variable = { which = th_danmaku_rolled_initiative value = 3 } }
			1 = { change_variable = { which = th_danmaku_rolled_initiative value = 4 } }
		}
		change_variable = {
			which = th_danmaku_rolled_initiative
			which = th_danmaku_ini_bonus
		}
	}
}
th_alternative_roll_initiative = {	#I LOOOOOOOOVE EU4's inability to have random numbers
	custom_tooltip = th_roll_initiative_tt
	hidden_effect = {
		export_to_variable = {
			which = th_danmaku_randomizer
			value = max_manpower
		}
		export_to_variable = {
			which = $variable$
			value = manpower
		}
		change_variable = {
			which = th_danmaku_randomizer
			which = $variable$
		}
		divide_variable = {
			which = th_danmaku_randomizer
			value = 2
		}
		set_variable = {
			which = $variable$
			which = th_danmaku_randomizer
		}
		random = {
			chance = 0.25
			change_variable = {
				which = th_danmaku_randomizer
				value = 1
			}
		}
		random = {
			chance = 0.25
			change_variable = {
				which = th_danmaku_randomizer
				value = 2
			}
		}
		random = {
			chance = 0.25
			change_variable = {
				which = th_danmaku_randomizer
				value = 3
			}
		}
		divide_variable = {
			which = th_danmaku_randomizer
			value = 4
		}
		round_variable = {
			which = th_danmaku_randomizer
			value = -1
		}
		multiply_variable = {
			which = th_danmaku_randomizer
			value = 4
		}
		subtract_variable = {
			which = $variable$
			which = th_danmaku_randomizer
		}
		round_variable = {
			which = $variable$
			value = 0
		}
		change_variable = {
			which = $variable$
			which = $bonus$
		}
	}
}

th_roll_initiative_for_current_instance = {
	custom_tooltip = th_roll_initiative_for_current_instance_tt
	hidden_effect = {
		$country_1$ = { th_roll_initiative = yes }
		$country_2$ = {
			th_alternative_roll_initiative = {
				variable = th_danmaku_rolled_initiative
				bonus = th_danmaku_ini_bonus
			}
			set_variable = {
				which = th_danmaku_rolled_initiative_transfer
				which = th_danmaku_rolled_initiative
			}
			while = {
				limit = {
					NOT = {
						is_variable_equal = {
							which = th_danmaku_rolled_initiative_transfer
							value = 0
						}
					}
				}
				if = {
					limit = { check_variable = { which = th_danmaku_rolled_initiative_transfer value = 1 } }
					change_variable = { which = th_danmaku_rolled_initiative_transfer value = -1 }
				}
				else = {
					change_variable = { which = th_danmaku_rolled_initiative_transfer value = 1 }
				}
				$country_1$ = { change_variable = { which = th_danmaku_rolled_initiative_comperator value = 1 } }
			}
		}
		$country_1$ = {
			if = {
				limit = {
					check_variable = {
						which = th_danmaku_rolled_initiative
						which = th_danmaku_rolled_initiative_comperator
					}
				}
				set_ruler_flag = th_danmaku_has_turn_ownership
				th_on_new_own_turn = yes
				$country_2$ = {
					set_ruler_flag = th_danmaku_has_not_turn_ownership
					th_on_new_enemy_turn = yes
				}
			}
			else = {
				set_ruler_flag = th_danmaku_has_not_turn_ownership
				$country_2$ = {
					set_ruler_flag = th_danmaku_has_turn_ownership
					th_on_new_own_turn = yes
				}
			}
		}
	}
}

th_roll_initiative_for_root_scope = {
	$opponent$ = { custom_tooltip = th_roll_initiative_root_for_current_instance_tt }
	hidden_effect = {
		$opponent$ = { th_roll_initiative = yes }
		th_alternative_roll_initiative = {
			variable = th_danmaku_rolled_initiative
			bonus = th_danmaku_ini_bonus
		}
		set_variable = {
			which = th_danmaku_rolled_initiative_transfer
			which = th_danmaku_rolled_initiative
		}
		while = {
			limit = {
				NOT = {
					is_variable_equal = {
						which = th_danmaku_rolled_initiative_transfer
						value = 0
					}
				}
			}
			if = {
				limit = { check_variable = { which = th_danmaku_rolled_initiative_transfer value = 1 } }
				change_variable = { which = th_danmaku_rolled_initiative_transfer value = -1 }
			}
			else = {
				change_variable = { which = th_danmaku_rolled_initiative_transfer value = 1 }
			}
			$opponent$ = { change_variable = { which = th_danmaku_rolled_initiative_comperator value = 1 } }
		}
		$opponent$ = {
			if = {
				limit = {
					check_variable = {
						which = th_danmaku_rolled_initiative
						which = th_danmaku_rolled_initiative_comperator
					}
				}
				set_ruler_flag = th_danmaku_has_turn_ownership
				th_on_new_own_turn = yes
				prev = {
					set_ruler_flag = th_danmaku_has_not_turn_ownership
					th_on_new_enemy_turn = yes
				}
			}
			else = {
				set_ruler_flag = th_danmaku_has_not_turn_ownership
				th_on_new_enemy_turn = yes
				prev = {
					set_ruler_flag = th_danmaku_has_turn_ownership
					th_on_new_own_turn = yes
				}
			}
		}
	}
}


th_create_danmaku_duel_against_country = {
	if = {
		limit = {
			tag = $country_1$
			tag = $country_2$
		}
		log = "Called a Danmaku Duel against itself. That is not possible."
	}
	else_if = {
		limit = {
			OR = {
				$country_1$ = { th_is_in_a_danmaku_duel = yes }
				$country_2$ = { th_is_in_a_danmaku_duel = yes }
			}
		}
		log = "Either country is already in a danmaku duel."
	}
	else = {
		if = {
			limit = { tag = $country_1$ }
			$country_2$ = { custom_tooltip = th_create_danmaku_duel_instance_against_root_tt }
		}
		else_if = {
			limit = { tag = $country_2$ }
			$country_1$ = { custom_tooltip = th_create_danmaku_duel_instance_against_root_tt }
		}
		else = {
			$country_1$ = { custom_tooltip = th_join_danmaku_duel_instance_tt }
			$country_2$ = { custom_tooltip = th_join_danmaku_duel_instance_tt }
			custom_tooltip = th_create_danmaku_duel_instance_tt
		}
		hidden_effect = {
			th_global_setup_danmaku_duels_data = yes
			1 = {
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = th_danmaku_duel_counter
								which = th_danmaku_max_duels
							}
						}
					}
					change_variable = {
						which = th_danmaku_duel_counter
						value = 1
					}
					th_create_danmaku_duel_instance = {
						country_1 = $country_1$
						country_2 = $country_2$
					}
					th_roll_initiative_for_current_instance = {
						country_1 = $country_1$
						country_2 = $country_2$
					}
				}
				else = {
					log = "Too many Danmaku Duel instances were called..."
				}
			}
			th_gui_set_enemy_bar = { country_1 = $country_1$ country_2 = $country_2$ type = health }
			th_gui_set_enemy_bar = { country_1 = $country_1$ country_2 = $country_2$ type = mana }
		}
	}
}


th_change_danmaku_specific_instance_round = {
	hidden_effect = {
		1 = {
			if = {
				limit = { NOT = { check_variable = { which = th_danmaku_duel_instance_$instance$_opponent_turn value = 1 } } }
				1 = { set_variable = { which = th_danmaku_duel_instance_$instance$_opponent_turn value = 1 } }
			}
			else = {
				1 = {
					set_variable = { which = th_danmaku_duel_instance_$instance$_opponent_turn value = 0 }
					change_variable = { which = th_danmaku_duel_instance_$instance$_round_counter value = 1 }
				}
			}
			set_variable = {
				which = th_danmaku_duel_instance_$instance$_turn_duration_counter
				which = th_dnamaku_default_turn_duration
			}
		}
	}
	if = {
		limit = {
			1 = {
				NOT = { check_variable = { which = th_danmaku_duel_instance_$instance$_opponent_turn value = 0 } }
				check_variable = { which = th_danmaku_default_setting_reroll_initiative value = 1 }
			}
		}
		th_roll_initiative_for_root_scope = { opponent = $opponent$ }
	}
	else = {
		if = {
			limit = { $opponent$ = { th_has_turn_ownership = yes } }
			$opponent$ = {
				custom_tooltip = th_end_turn_for_this_ruler_tt
				clr_ruler_flag = th_danmaku_has_turn_ownership
				set_ruler_flag = th_danmaku_has_not_turn_ownership
				th_on_new_enemy_turn = yes
			}
			custom_tooltip = th_start_turn_for_this_ruler_tt
			set_ruler_flag = th_danmaku_has_turn_ownership
			clr_ruler_flag = th_danmaku_has_not_turn_ownership
			th_on_new_own_turn = yes
		}
		else = {
			$opponent$ = {
				custom_tooltip = th_start_turn_for_this_ruler_tt
				set_ruler_flag = th_danmaku_has_turn_ownership
				clr_ruler_flag = th_danmaku_has_not_turn_ownership
				th_on_new_own_turn = yes
			}
			custom_tooltip = th_end_turn_for_this_ruler_tt
			clr_ruler_flag = th_danmaku_has_turn_ownership
			set_ruler_flag = th_danmaku_has_not_turn_ownership
			th_on_new_enemy_turn = yes
		}
	}
}

#Solo Experience
#Following Touhou characters are supported:
# reimu, marisa, mima, konngara, sariel, rika, meira, kana, kotohime, ellen, rikako, chiyuri, yumemi, kurumi, elly, 
# gengetsu, mugetsu, yuuka, alice, yuki, mai, yumeko, shinki, rumia, cirno, daiyousei, meiling, koakuma, patchouli, 
# sakuya, remilia, flandre, satsuki, letty, chen, lily, prismriver, lunasa, merlin, lyrica, layla, youmu, youki, 
# yuyuko, ran, yukari, suika, wriggle, mystia, keine, tewi, reisen, eirin, kaguya, mokou, aya, medicine, komachi, 
# eiki, shizuha, minoriko, hina, nitori, momiji, sanae, kanako, suwako, iku, tenshi, kisume, yamame, parsee, yuugi, 
# satori, orin, okuu, koishi, nazrin, kogasa, ichirin, minamitsu, shou, byakuren, nue, hatate, kyouko, yoshika, 
# seiga, tojiko, futo, miko, mamizou, kokoro, wakasagihime, sekibanki, kagerou, benben, yatsuhashi, seija, shinmyoumaru, 
# raiko, sumireko, renko, maribel, seiran, ringo, doremy, sagune, clownpiece, junko, hecatia, toyohime, yorihime, 
# change, reisen_moon, joon, shion, sunny, star, luna, kasen, larva, nemuno, aunn, narumi, teireida, satonono, okina, 
# eika, urumi, kutaka, mayumi, keiki, yachie, saki, yuuma, mike, takane, sannyo, misumaru, tsukasa, megumu, chimata, 
# momoyo, son, enoko, chiyari, hisami, zanmu, rinnosuke, tokiko, miyoi, mizuchi, zun
th_create_danmaku_duel_against_unlanded_character = {
	custom_tooltip = th_create_danmaku_duel_against_unlanded_character_$target$_tt
	hidden_effect = {
		th_prepare_country_for_danmaku_duel = yes
		set_ruler_flag = th_is_duelling_an_unlanded_character
		set_ruler_flag = th_is_duelling_character_$target$
		th_roll_initiative_for_solo_fight = yes
		set_variable = {
			which = th_danmaku_unlanded_duel_round_counter
			value = 1
		}
		set_variable = {
			which = th_danmaku_unlanded_duel_opponent_turn
			value = 0
		}
		set_variable = {
			which = th_danmaku_unlanded_turn_duration
			value = 18
		}
		1 = {
			set_variable = {
				which = th_danmaku_default_turn_duration_transfer
				which = th_dnamaku_default_turn_duration
			}
			PREV = {
				set_variable = { which = th_danmaku_default_turn_duration_transfer 		which = PREV }
				set_variable = {
					which = th_danmaku_unlanded_turn_duration
					which = th_danmaku_default_turn_duration_transfer
				}
			}
		}
	}
}

th_roll_initiative_for_solo_fight = {
	custom_tooltip = th_roll_initiative_for_solo_fight_tt
	hidden_effect = {
		th_roll_initiative = yes
		th_alternative_roll_initiative = {
			variable = th_danmaku_unlanded_character_rolled_initiative
			bonus = th_danmaku_unlanded_character_ini_bonus
		}
		if = {
			limit = {
				check_variable = {
					which = th_danmaku_rolled_initiative
					which = th_danmaku_unlanded_character_rolled_initiative
				}
			}
			set_ruler_flag = th_danmaku_has_turn_ownership
			set_ruler_flag = th_danmaku_unlanded_character_not_turn_ownership
			th_on_new_own_turn = yes
		}
		else = {
			set_ruler_flag = th_danmaku_unlanded_character_turn_ownership
			set_ruler_flag = th_danmaku_has_not_turn_ownership
			th_on_new_enemy_turn = yes
		}
	}
}

th_end_turn_against_unlanded_character = {
	if = {
		limit = {
			NOT = {
				check_variable = {
					which = th_danmaku_unlanded_duel_opponent_turn
					value = 1
				}
			}
		}
		set_variable = {
			which = th_danmaku_unlanded_duel_opponent_turn
			value = 1
		}
		if = {
			limit = {
				has_ruler_flag = th_danmaku_has_turn_ownership
			}
			clr_ruler_flag = th_danmaku_has_turn_ownership
			clr_ruler_flag = th_danmaku_unlanded_character_not_turn_ownership
			set_ruler_flag = th_danmaku_unlanded_character_turn_ownership
			set_ruler_flag = th_danmaku_has_not_turn_ownership
			th_on_new_enemy_turn = yes
		}
		else = {
			set_ruler_flag = th_danmaku_has_turn_ownership
			th_on_new_own_turn = yes
			set_ruler_flag = th_danmaku_unlanded_character_not_turn_ownership
			clr_ruler_flag = th_danmaku_unlanded_character_turn_ownership
			clr_ruler_flag = th_danmaku_has_not_turn_ownership
		}
	}
	else = {
		set_variable = {
			which = th_danmaku_unlanded_duel_opponent_turn
			value = 0
		}
		change_variable = {
			which = th_danmaku_unlanded_duel_round_counter
			value = 1
		}
		th_roll_initiative_for_solo_fight = yes
	}
	1 = {
		set_variable = {
			which = th_danmaku_default_turn_duration_transfer
			which = th_dnamaku_default_turn_duration
		}
		PREV = {
			set_variable = { which = th_danmaku_default_turn_duration_transfer 		which = PREV }
			set_variable = {
				which = th_danmaku_unlanded_turn_duration
				which = th_danmaku_default_turn_duration_transfer
			}
		}
	}
}

#General Interaction mechanics
th_end_turn = {
	hidden_effect = {
		if = {
			limit = { th_is_not_duelling_an_unlanded_character = yes }
			th_select_enemy_event_target_and_do_effect = {
				effect = "
					th_change_danmaku_instance_round = { opponent = root }
				"
			}
		}
		else = {
			th_end_turn_against_unlanded_character = yes
		}
	}
}

th_monthly_danaku_duel_duration_reduction = {
	if = {
		limit = { 1 = { check_variable = { which = th_danmaku_duel_instance_$instance$_turn_duration_counter value = 0 } } }
		1 = {
			subtract_variable = {
				which = th_danmaku_duel_instance_$instance$_turn_duration_counter
				value = 1
			}
		}
		if = {
			limit = {
				1 = { NOT = { check_variable = { which = th_danmaku_duel_instance_$instance$_turn_duration_counter value = 1 } } }
				has_saved_global_event_target = th_danmaku_duelist_of_id_1_of_instance_$instance$
				has_saved_global_event_target = th_danmaku_duelist_of_id_2_of_instance_$instance$
			}
			if = {
				limit = { event_target:th_danmaku_duelist_of_id_1_of_instance_$instance$ = { th_has_turn_ownership = yes } }
				event_target:th_danmaku_duelist_of_id_1_of_instance_$instance$ = { th_change_danmaku_instance_round = { opponent = event_target:th_danmaku_duelist_of_id_2_of_instance_$instance$ } }
			}
			else = {
				event_target:th_danmaku_duelist_of_id_2_of_instance_$instance$ = { th_change_danmaku_instance_round = { opponent = event_target:th_danmaku_duelist_of_id_1_of_instance_$instance$ } }
			}
		}
	}
}

th_gui_get_enemy_resource_bar = {
	if = {
		limit = { has_saved_event_target = enemy_duelist }
		event_target:enemy_duelist = {
			set_variable = {
				which = th_danmaku_source_transfer_$type$
				which = th_danmaku_$type$_var
			}
			PREV = {
				set_variable = {
					which = th_danmaku_source_transfer_$type$
					which = PREV
				}
				set_variable = { 
					which = th_danmaku_enemy_$type$_var 
					which = th_danmaku_source_transfer_$type$ 
				}
			}
		}
	}
}

th_gui_update_enemy_resource_bar = {
	set_variable = {
		which = th_danmaku_source_transfer_$type$
		which = th_danmaku_$type$_var
	}
	th_create_event_target_enemy_duelist = yes
	if = {
		limit = { has_saved_event_target = enemy_duelist }
		event_target:enemy_duelist = {
			set_variable = {
				which = th_danmaku_source_transfer_$type$
				which = PREV
			}
			set_variable = { 
				which = th_danmaku_enemy_$type$_var 
				which = th_danmaku_source_transfer_$type$ 
			}
		}
	}
}

th_change_combat_resource = {
	change_variable = {
		which = th_danmaku_$type$
		value = $value$
	}
	if = {
		limit = { NOT = { check_variable = { which = th_danmaku_$type$ value = 0 } } }
		set_variable = {
			which = th_danmaku_$type$
			value = 0
		}
	}
	if = {
		limit = { check_variable = { which = th_danmaku_$type$ which = th_danmaku_max_$type$ } }
		set_variable = {
			which = th_danmaku_$type$
			which = th_danmaku_max_$type$
		}
	}
	th_gui_update_danmaku_bar = { type = $type$ }
	th_gui_update_enemy_resource_bar = { type = $type$ }
}
th_set_combat_resource = {
	set_variable = {
		which = th_danmaku_$type$
		value = $value$
	}
	if = {
		limit = { NOT = { check_variable = { which = th_danmaku_$type$ value = 0 } } }
		set_variable = {
			which = th_danmaku_$type$
			value = 0
		}
	}
	if = {
		limit = { check_variable = { which = th_danmaku_$type$ which = th_danmaku_max_$type$ } }
		set_variable = {
			which = th_danmaku_$type$
			which = th_danmaku_max_$type$
		}
	}
	th_gui_update_danmaku_bar = { type = $type$ }
	th_gui_update_enemy_resource_bar = { type = $type$ }
}
th_reset_combat_resource = {
	set_variable = {
		which = th_danmaku_$type$
		which = th_danmaku_max_$type$
	}
	if = {
		limit = { NOT = { check_variable = { which = th_danmaku_$type$ value = 0 } } }
		set_variable = {
			which = th_danmaku_$type$
			value = 0
		}
	}
	th_gui_update_danmaku_bar = { type = $type$ }
	th_gui_update_enemy_resource_bar = { type = $type$ }
}

th_on_new_own_turn = {
	th_reset_combat_resource = { type = action_points }
}

th_on_new_enemy_turn = {}

th_check_if_kill = {
	if = {
		limit = { NOT = { th_is_alive = yes } }
		set_ruler_flag = th_danmaku_duel_over
		PREV = { set_ruler_flag = th_danmaku_duel_over }
		if = {
			limit = { PREV = { th_is_alive = yes } }
			th_on_defeat = yes
			PREV = { th_on_win = yes }
		}
		else = {
			th_on_draw = yes
			PREV = { th_on_draw = yes }
		}
	}
}

th_on_win = {
	country_event = {
		id = th_danmaku_duel_event.1
	}
}
th_on_defeat = {
	th_play_sound = { sound = th_danmaku_death }
	country_event = {
		id = th_danmaku_duel_event.2
	}
}
th_on_draw = {
	country_event = {
		id = th_danmaku_duel_event.3
	}
}

th_perform_attack = {
	if = {
		limit = { has_saved_event_target = enemy_duelist }
		set_variable = {
			which = th_danmaku_attack_roll
			value = 0
		}
		random_list = {
			1 = { set_variable = { which = th_danmaku_attack_roll value = 1 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 2 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 3 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 4 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 5 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 6 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 7 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 8 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 9 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 10 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 11 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 12 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 13 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 14 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 15 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 16 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 17 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 18 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 19 } }
			1 = { set_variable = { which = th_danmaku_attack_roll value = 20 } }
		}
		if = {
			limit = {
				check_variable = {
					which = th_danmaku_attack_roll
					which = th_danmaku_crit_roll_needed
				}
			}
			set_ruler_flag = th_danmaku_rolled_critical_hit
		}
		change_variable = {
			which = th_danmaku_attack_roll
			which = th_danmaku_hit_bonus
		}
		event_target:enemy_duelist = {
			set_variable = {
				which = th_danmaku_enemy_armor_class_transfer
				value = th_danmaku_armor_class
			}
		}
		set_variable = {
			which = th_danmaku_enemy_armor_class_transfer
			value = PREV
		}
		if = {
			limit = {
				check_variable = {
					which = th_danmaku_attack_roll
					which = th_danmaku_enemy_armor_class_transfer
				}
			}
			set_ruler_flag = th_danmaku_duel_hit_attack
			if = {
				limit = { has_ruler_flag = th_danmaku_rolled_critical_hit }
				th_play_sound = { sound = th_danmaku_duel_ability_$ability$_critical_hit }
				set_variable = {
					which = th_danmaku_crit_multiplier
					which = th_danmaku_crit_roll_damage_multiplier
				}
				th_log_for_current_instance = { type = is_critical input = yes }
			}
			else = {
				th_play_sound = { sound = th_danmaku_duel_ability_$ability$_hit }
				set_variable = {
					which = th_danmaku_crit_multiplier
					which = 0
				}
			}
			th_deal_damage = yes
		}
		else = {
			set_ruler_flag = th_danmaku_duel_missed_attack
			clr_ruler_flag = th_danmaku_rolled_critical_hit
			th_play_sound = { sound = th_danmaku_duel_miss }
			th_log_for_current_instance = { type = is_miss input = yes }
		}
	}
}

th_roll_die = {
	if = {
		limit = {
			check_variable = { which = $die_type$ value = 2 }
			check_variable = { which = $die_amount$ value = 1 }
		}
		set_variable = {
			which = th_roll_amount
			which = $die_amount$
		}
		while = {
			limit = { check_variable = { which = th_roll_amount value = 1 } }
			set_variable = { which = th_roll value = 0 }
			random_list = {
				1 = { trigger = { check_variable = { which = $die_type$ value = 2 } } set_variable = { which = th_roll value = 1 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 2 } } set_variable = { which = th_roll value = 2 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 3 } } set_variable = { which = th_roll value = 3 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 4 } } set_variable = { which = th_roll value = 4 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 5 } } set_variable = { which = th_roll value = 5 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 6 } } set_variable = { which = th_roll value = 6 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 7 } } set_variable = { which = th_roll value = 7 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 8 } } set_variable = { which = th_roll value = 8 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 9 } } set_variable = { which = th_roll value = 9 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 10 } } set_variable = { which = th_roll value = 10 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 11 } } set_variable = { which = th_roll value = 11 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 12 } } set_variable = { which = th_roll value = 12 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 13 } } set_variable = { which = th_roll value = 13 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 14 } } set_variable = { which = th_roll value = 14 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 15 } } set_variable = { which = th_roll value = 15 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 16 } } set_variable = { which = th_roll value = 16 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 17 } } set_variable = { which = th_roll value = 17 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 18 } } set_variable = { which = th_roll value = 18 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 19 } } set_variable = { which = th_roll value = 19 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 20 } } set_variable = { which = th_roll value = 20 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 21 } } set_variable = { which = th_roll value = 21 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 22 } } set_variable = { which = th_roll value = 22 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 23 } } set_variable = { which = th_roll value = 23 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 24 } } set_variable = { which = th_roll value = 24 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 25 } } set_variable = { which = th_roll value = 25 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 26 } } set_variable = { which = th_roll value = 26 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 27 } } set_variable = { which = th_roll value = 27 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 28 } } set_variable = { which = th_roll value = 28 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 29 } } set_variable = { which = th_roll value = 29 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 30 } } set_variable = { which = th_roll value = 30 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 31 } } set_variable = { which = th_roll value = 31 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 32 } } set_variable = { which = th_roll value = 32 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 33 } } set_variable = { which = th_roll value = 33 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 34 } } set_variable = { which = th_roll value = 34 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 35 } } set_variable = { which = th_roll value = 35 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 36 } } set_variable = { which = th_roll value = 36 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 37 } } set_variable = { which = th_roll value = 37 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 38 } } set_variable = { which = th_roll value = 38 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 39 } } set_variable = { which = th_roll value = 39 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 40 } } set_variable = { which = th_roll value = 40 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 41 } } set_variable = { which = th_roll value = 41 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 42 } } set_variable = { which = th_roll value = 42 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 43 } } set_variable = { which = th_roll value = 43 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 44 } } set_variable = { which = th_roll value = 44 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 45 } } set_variable = { which = th_roll value = 45 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 46 } } set_variable = { which = th_roll value = 46 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 47 } } set_variable = { which = th_roll value = 47 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 48 } } set_variable = { which = th_roll value = 48 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 49 } } set_variable = { which = th_roll value = 49 } }
				1 = { trigger = { check_variable = { which = $die_type$ value = 50 } } set_variable = { which = th_roll value = 50 } }
			}
			change_variable = { which = $roll_result$ which = th_roll }
			[[bonus_per_roll]change_variable = { which = $roll_result$ which = $bonus_per_roll$ }]
			subtract_variable = { which = th_roll_amount value = 1 }
		}
	}
	else = {
		log = "Cannot roll due to few dies or too small dies."
	}
}

th_deal_damage = {
	if = {
		limit = { has_saved_event_target = enemy_duelist }
		#What type of die?
		set_variable = {
			which = th_danmaku_damage_die
			which = th_danmaku_attack_die
		}
		change_variable = {
			which = th_danmaku_damage_die
			which = th_danmaku_ability_damage_die_bonus
		}
		#How many dies?
		set_variable = {
			which = th_danmaku_damage_die_amount
			value = 1
		}
		change_variable = {
			which = th_danmaku_damage_die_amount
			which = th_danmaku_ability_damage_die_amount_bonus
		}
		#Rolled damage end result
		set_variable = {
			which = th_danmaku_damage_roll
			value = 0
		}
		th_roll_die = {
			die_type = th_danmaku_damage_die
			die_amount = th_danmaku_damage_die_amount
			roll_result = th_danmaku_damage_roll
			bonus_per_roll = th_danmaku_ability_damage_flat_bonus_per_die
		}
		change_variable = {
			which = th_danmaku_damage_roll
			which = th_danmaku_ability_damage_flat_bonus
		}
		change_variable = {
			which = th_danmaku_crit_multiplier
			value = 1
		}
		multiply_variable = {
			which = th_danmaku_damage_roll
			which = th_danmaku_crit_multiplier
		}
		set_variable = {
			which = th_danmaku_damage_roll_raw
			which = th_danmaku_damage_roll
		}
		event_target:enemy_duelist = {
			set_variable = {
				which = th_danmaku_resistance_transfer
				which = th_danmaku_resistance
			}
		}
		set_variable = {
			which = th_danmaku_resistance_transfer
			which = PREV
		}
		divide_variable = {
			which = th_danmaku_resistance_transfer
			value = 100
		}
		multiply_variable = {
			which = th_danmaku_resistance_transfer
			which = th_danmaku_damage_roll
		}
		subtract_variable = {
			which = th_danmaku_damage_roll
			which = th_danmaku_resistance_transfer
		}
		if = {
			limit = { NOT = { check_variable = { which = th_danmaku_damage_roll value = 0 } } }
			set_variable = { which = th_danmaku_damage_roll value = 0 }
		}
		th_log_memorize_value = { variable = th_danmaku_damage_roll }
		event_target:enemy_duelist = {
			set_variable = {
				which = th_danmaku_damage_roll
				which = PREV
			}
			subtract_variable = {
				which = th_danmaku_health
				which = th_danmaku_damage_roll
			}
			if = {
				limit = { NOT = { check_variable = { which = th_danmaku_health value = 0 } } }
				set_variable = {
					which = th_danmaku_health
					value = 0
				}
			}
			th_gui_update_danmaku_bar = { type = health }
			th_check_if_kill = yes
		}
		th_gui_get_enemy_resource_bar = { type = health }
	}
}


th_play_sound = {
	if = {
		limit = { 1 = { check_variable = { which = th_danmaku_sound_effects value = 1 } } }
		play_sound = $sound$
		if = {
			limit = {
				has_saved_event_target = enemy_duelist
				event_target:enemy_duelist = {
					has_country_flag = th_opened_danmaku_battle_window
					NOT = { tag = PREV }
				}
			}
			event_target:enemy_duelist = { play_sound = $sound$ }
		}
		if = {
			limit = {
				has_saved_event_target = root_duelist
				event_target:root_duelist = {
					has_country_flag = th_opened_danmaku_battle_window
					NOT = { tag = PREV }
				}
			}
			event_target:root_duelist = { play_sound = $sound$ }
		}
	}
}

th_use_ability = {
	hidden_effect = {
		th_create_event_target_enemy_duelist = yes
		th_play_sound = { sound = th_danmaku_duel_ability_$ability$_launch }
		#Hit bonuses
		set_variable = { which = th_danmaku_ability_hit_flat_bonus value = 0 }
		[[hit_flat_bonus]change_variable = { which = th_danmaku_ability_hit_flat_bonus value = $hit_flat_bonus$ }]
		set_variable = { which = th_danmaku_ability_hit_die_bonus value = 0 }
		[[hit_die_bonus]change_variable = { which = th_danmaku_ability_hit_die_bonus value = $hit_die_bonus$ }]

		#Damage bonuses
		set_variable = { which = th_danmaku_ability_damage_flat_bonus value = 0 }
		[[damage_flat_bonus]change_variable = { which = th_danmaku_ability_damage_flat_bonus value = $damage_flat_bonus$ }]
		set_variable = { which = th_danmaku_ability_damage_die_bonus value = 0 }
		[[damage_die_bonus]change_variable = { which = th_danmaku_ability_damage_die_bonus value = $damage_die_bonus$ }]
		set_variable = { which = th_danmaku_ability_damage_die_amount_bonus value = 0 }
		[[damage_die_amount_bonus]change_variable = { which = th_danmaku_ability_damage_die_amount_bonus value = $damage_die_amount_bonus$ }]
		set_variable = { which = th_danmaku_ability_damage_flat_bonus_per_die value = 0 }
		[[damage_flat_bonus_per_die]change_variable = { which = th_danmaku_ability_damage_flat_bonus_per_die value = $damage_flat_bonus_per_die$ }]


		th_use_ability_$ability$ = yes
	}
}