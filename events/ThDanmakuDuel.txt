########################################
# Danmaku Events
########################################

namespace = th_danmaku_duel_event
#Vicotry
country_event = {
	id = th_danmaku_duel_event.1
	title = th_danmaku_duel_event.1.title
	desc = th_danmaku_duel_event.1.desc
	picture = SPELLCARD_eventPicture
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			th_create_event_target_enemy_duelist = yes
			set_country_flag = th_danmaku_locked_actions
			th_define_exp_reward = { type = win }
			th_define_danmaku_gold_reward = yes
			th_define_danmaku_power_reward = yes
		}
	}
	option = {
		name = th_danmaku_duel_event.1.a
		th_add_danmaku_exp_reward = { type = victory }
		th_add_danmaku_gold_reward = { type = victory }
		th_add_danmaku_power_reward = { type = victory }
		add_power_projection = {
			type = th_won_danmaku_duel_power_projection
			amount = 5
		}
	}
	after = {
		th_deactivate_current_instance = yes
	}
}
#Defeat
country_event = {
	id = th_danmaku_duel_event.2
	title = th_danmaku_duel_event.2.title
	desc = th_danmaku_duel_event.2.desc
	picture = SPELLCARD_eventPicture
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			th_create_event_target_enemy_duelist = yes
			set_country_flag = th_danmaku_locked_actions
			th_define_exp_reward = { type = base }
		}
	}
	option = {
		name = th_danmaku_duel_event.2.a
		th_danmaku_lose_effect = yes
		add_power_projection = {
			type = th_lost_danmaku_duel_power_projection
			amount = -5
		}
	}
	after = {
		th_deactivate_current_instance = yes
	}
}
#Draw
country_event = {
	id = th_danmaku_duel_event.3
	title = th_danmaku_duel_event.3.title
	desc = th_danmaku_duel_event.3.desc
	picture = SPELLCARD_eventPicture
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			th_create_event_target_enemy_duelist = yes
			set_country_flag = th_danmaku_locked_actions
			th_define_exp_reward = { type = base }
			th_define_danmaku_gold_reward = yes
			th_define_danmaku_power_reward = yes
			th_reward_multiplier = {
				type = gold
				factor = 0.5
			}
			th_reward_multiplier = {
				type = power
				factor = 0.5
			}
		}
	}
	option = {
		name = th_danmaku_duel_event.3.a
		th_add_danmaku_exp_reward = { type = draw }
		th_add_danmaku_gold_reward = { type = draw }
		th_add_danmaku_power_reward = { type = draw }
	}
	after = {
		th_deactivate_current_instance = yes
	}
}
#Ruler dies mid-combat
country_event = {
	id = th_danmaku_duel_event.4
	title = th_danmaku_duel_event.4.title
	desc = th_danmaku_duel_event.4.desc
	picture = SPELLCARD_eventPicture
	is_triggered_only = yes
	trigger = {
		has_country_flag = th_is_in_a_danmaku_duel
		NOT = { has_ruler_flag = th_ruler_is_in_a_danmaku_duel }
	}
	immediate = {
		hidden_effect = {
			th_create_event_target_enemy_duelist = yes
			set_country_flag = th_danmaku_locked_actions
		}
	}
	option = {
		name = th_danmaku_duel_event.4.a
		if = {
			limit = { has_saved_event_target = enemy_duelist }
			event_target:enemy_duelist = {
				country_event = {
					id = th_danmaku_duel_event.5
				}
			}
		}
	}
	after = {
		th_deactivate_current_instance = yes
	}
}
#Enemy dies mid-combat
country_event = {
	id = th_danmaku_duel_event.5
	title = th_danmaku_duel_event.5.title
	desc = th_danmaku_duel_event.5.desc
	picture = SPELLCARD_eventPicture
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			set_country_flag = th_danmaku_locked_actions
		}
	}
	option = {
		name = th_danmaku_duel_event.5.a
	}
	after = {
		th_deactivate_current_instance = yes
	}
}
#Enemy country gets annexed
country_event = {
	id = th_danmaku_duel_event.6
	title = th_danmaku_duel_event.6.title
	desc = th_danmaku_duel_event.6.desc
	picture = SPELLCARD_eventPicture
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			set_country_flag = th_danmaku_locked_actions
		}
	}
	option = {
		name = th_danmaku_duel_event.6.a
	}
	after = {
		th_deactivate_current_instance = yes
	}
}

#Explanation Event

#Monthly GLOBAL Update
country_event = {
	id = th_danmaku_duel_event.100
	title = none
	desc = none
	picture = SPELLCARD_eventPicture
	is_triggered_only = yes
	mean_time_to_happen = {
		days = 1
	}
	trigger = {
		owns = 1
		OR = {
			had_global_flag = {
				flag = th_danmaku_monthly_update
				days = 30
			}
			NOT = { has_global_flag = th_danmaku_monthly_update }
		}
	}
	hidden = yes
	option = {
		clr_global_flag = th_danmaku_monthly_update
		set_global_flag = th_danmaku_monthly_update
		th_monthly_danaku_duel_update = yes
		ai_chance = {
			factor = 1
		}
	}
}

#Monthly COUNTRY Update
country_event = {
	id = th_danmaku_duel_event.101
	title = none
	desc = none
	picture = SPELLCARD_eventPicture
	is_triggered_only = yes
	mean_time_to_happen = {
		days = 1
	}
	trigger = {
		th_has_danmaku_duels_unlocked = yes
		th_is_not_in_a_danmaku_duel = yes
	}
	hidden = yes
	option = {
		th_monthly_country_danaku_duel_update = yes
		ai_chance = {
			factor = 1
		}
	}
}

#Setup stats
country_event = {
	id = th_danmaku_duel_event.1000
	title = none
	desc = none
	picture = TANYA_eventPicture
	is_triggered_only = yes
	hidden = yes
	trigger = {
		NOT = { has_country_flag = th_danmaku_setup_event }
		th_has_danmaku_duels_unlocked = yes
		has_regency = no
		is_lesser_in_union = no
		NOT = { has_ruler_flag = th_danmaku_ruler_is_set }
	}
	immediate = {
		th_set_dynamically_danmaku_ruler = yes
	}
	option = {
		set_country_flag = th_danmaku_setup_event
		th_set_default_danmaku_stats = yes
		ai_chance = {
			factor = 1
		}
	}
}

namespace = th_danmaku_test_event



#Test Duel
country_event = {
	id = th_danmaku_test_event.1
	title = none
	desc = none
	picture = TANYA_eventPicture
	is_triggered_only = yes
	option = {
		th_create_danmaku_duel_against_country = {
			country_1 = root
			country_2 = SCR
		}
	}
	option = {
		th_create_danmaku_duel_against_country = {
			country_1 = HKR
			country_2 = FOM
		}
	}
	option = {
		th_create_danmaku_duel_against_country = {
			country_1 = SFF
			country_2 = MKI
		}
	}
	option = {
		th_create_danmaku_duel_against_unlanded_character = {
			target = sakuya
		}
	}
	option = {
		
	}
}

province_event = {
	id = th_danmaku_test_event.3
	title = none
	desc = none
	picture = TANYA_eventPicture
	is_triggered_only = yes
	trigger = {
		province_id = 1
		check_variable = {
			which = th_danmaku_duel_of_instance_1_action_1_attack_die_flat_bonus
			value = 0.01
		}
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_actor_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_actor_1
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_actor_2
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_uses
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_performs
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_casts
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_enchants
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_curses
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_strikes
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_shoots
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_attacks
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_article_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_article_undefined
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_article_defined
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_attack
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_preposition_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_preposition_against
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_preposition_on
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_recipient_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_recipient_1
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_recipient_2
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_miss
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_dealing
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_healing
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_restore
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_afflicting_condition
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_gaining_condition
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_number_impact_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_number_impact_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_damage_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_damage_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_health_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_health_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_mana_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_mana_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_action_points_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_action_points_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_critical_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_critical_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_miss_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_miss_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_hit_roll_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_hit_roll_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_roll_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_roll_yes
	}
	option = {
		ai_chance = {
			factor = 1
		}
	}
	option = {
	}
}