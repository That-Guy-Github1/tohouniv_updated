########################################
# Danmaku Events
########################################

namespace = th_danmaku_duel_event
#Vicotry
country_event = {
	id = th_danmaku_duel_event.1
	title = th_danmaku_duel_event.1.title
	desc = th_danmaku_duel_event.1.desc
	picture = SPELLCARD_eventPicture
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			th_create_event_target_enemy_duelist = yes
		}
	}
	option = {
		name = th_danmaku_duel_event.1.a
	}
	after = {
		th_deactivate_current_instance = yes
	}
}
#Defeat
country_event = {
	id = th_danmaku_duel_event.2
	title = th_danmaku_duel_event.2.title
	desc = th_danmaku_duel_event.2.desc
	picture = SPELLCARD_eventPicture
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			th_create_event_target_enemy_duelist = yes
		}
	}
	option = {
		name = th_danmaku_duel_event.2.a
	}
	after = {
		th_deactivate_current_instance = yes
	}
}
#Draw
country_event = {
	id = th_danmaku_duel_event.3
	title = th_danmaku_duel_event.3.title
	desc = th_danmaku_duel_event.3.desc
	picture = SPELLCARD_eventPicture
	is_triggered_only = yes
	option = {
		name = th_danmaku_duel_event.3.a
	}
	after = {
		th_deactivate_current_instance = yes
	}
}
#Ruler dies mid-combat
country_event = {
	id = th_danmaku_duel_event.4
	title = th_danmaku_duel_event.4.title
	desc = th_danmaku_duel_event.4.desc
	picture = SPELLCARD_eventPicture
	is_triggered_only = yes
	trigger = {
		has_country_flag = th_is_in_a_danmaku_duel
		NOT = { has_ruler_flag = th_ruler_is_in_a_danmaku_duel }
	}
	immediate = {
		hidden_effect = {
			th_create_event_target_enemy_duelist = yes
		}
	}
	option = {
		name = th_danmaku_duel_event.4.a
		if = {
			limit = { has_saved_event_target = enemy_duelist }
			event_target:enemy_duelist = {
				country_event = {
					id = th_danmaku_duel_event.5
				}
			}
		}
	}
	after = {
		th_deactivate_current_instance = yes
	}
}
#Enemy dies mid-combat
country_event = {
	id = th_danmaku_duel_event.5
	title = th_danmaku_duel_event.5.title
	desc = th_danmaku_duel_event.5.desc
	picture = SPELLCARD_eventPicture
	is_triggered_only = yes
	option = {
		name = th_danmaku_duel_event.5.a
	}
	after = {
		th_deactivate_current_instance = yes
	}
}
#Enemy country gets annexed
country_event = {
	id = th_danmaku_duel_event.6
	title = th_danmaku_duel_event.6.title
	desc = th_danmaku_duel_event.6.desc
	picture = SPELLCARD_eventPicture
	is_triggered_only = yes
	option = {
		name = th_danmaku_duel_event.6.a
	}
	after = {
		th_deactivate_current_instance = yes
	}
}

#Explanation Event

#Monthly GLOBAL Update
country_event = {
	id = th_danmaku_duel_event.100
	title = none
	desc = none
	picture = SPELLCARD_eventPicture
	is_triggered_only = yes
	mean_time_to_happen = {
		days = 1
	}
	trigger = {
		owns = 1
		OR = {
			had_global_flag = {
				flag = th_danmaku_monthly_update
				days = 30
			}
			NOT = { has_global_flag = th_danmaku_monthly_update }
		}
	}
	hidden = yes
	option = {
		clr_global_flag = th_danmaku_monthly_update
		set_global_flag = th_danmaku_monthly_update
		th_monthly_danaku_duel_update = yes
		ai_chance = {
			factor = 1
		}
	}
}

#Monthly COUNTRY Update
country_event = {
	id = th_danmaku_duel_event.101
	title = none
	desc = none
	picture = SPELLCARD_eventPicture
	is_triggered_only = yes
	mean_time_to_happen = {
		days = 1
	}
	trigger = {
		th_has_danmaku_duels_unlocked = yes
		th_is_not_in_a_danmaku_duel = yes
	}
	hidden = yes
	option = {
		th_monthly_country_danaku_duel_update = yes
		ai_chance = {
			factor = 1
		}
	}
}

#Setup stats
country_event = {
	id = th_danmaku_duel_event.1000
	title = none
	desc = none
	picture = TANYA_eventPicture
	is_triggered_only = yes
	hidden = yes
	trigger = {
		NOT = { has_country_flag = th_danmaku_setup_event }
		th_has_danmaku_duels_unlocked = yes
		has_regency = no
		is_lesser_in_union = no
		NOT = { has_ruler_flag = th_danmaku_ruler_is_set }
	}
	immediate = {
		th_set_dynamically_danmaku_ruler = yes
	}
	option = {
		set_country_flag = th_danmaku_setup_event
		th_set_default_danmaku_stats = yes
		ai_chance = {
			factor = 1
		}
	}
}

namespace = th_danmaku_test_event



#Test Duel
country_event = {
	id = th_danmaku_test_event.1
	title = none
	desc = none
	picture = TANYA_eventPicture
	is_triggered_only = yes
	option = {
		th_create_danmaku_duel_against_country = {
			country_1 = root
			country_2 = SCR
		}
	}
	option = {
		th_create_danmaku_duel_against_country = {
			country_1 = HKR
			country_2 = FOM
		}
	}
	option = {
		th_create_danmaku_duel_against_country = {
			country_1 = SFF
			country_2 = MKI
		}
	}
	option = {
		th_create_danmaku_duel_against_unlanded_character = {
			target = sakuya
		}
	}
	option = {
		
	}
}

province_event = {
	id = th_danmaku_test_event.3
	title = none
	desc = none
	picture = TANYA_eventPicture
	is_triggered_only = yes
	trigger = {
		province_id = 1
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_actor_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_actor_1
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_actor_2
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_uses
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_performs
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_casts
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_enchants
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_curses
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_strikes
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_shoots
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_attacks
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_article_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_article_undefined
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_article_defined
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_attack
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_preposition_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_preposition_against
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_preposition_on
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_recipient_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_recipient_1
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_recipient_2
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_miss
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_dealing
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_healing
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_restore
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_afflicting_condition
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_gaining_condition
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_number_impact_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_number_impact_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_damage_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_damage_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_health_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_health_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_mana_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_mana_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_action_points_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_action_points_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_critical_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_critical_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_miss_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_is_miss_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_hit_roll_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_hit_roll_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_roll_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_roll_yes
	}
	option = {
		ai_chance = {
			factor = 1
		}
	}
	option = {
		1 = {
			trigger_switch = {
				on_trigger = has_province_flag
				th_danmaku_duel_of_instance_1_action_1_actor_NULL = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_actor_NULL set_province_flag = th_danmaku_duel_of_instance_1_action_2_actor_NULL clr_province_flag = th_danmaku_duel_of_instance_1_action_1_actor_NULL }
				th_danmaku_duel_of_instance_1_action_1_actor_1 = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_actor_1 set_province_flag = th_danmaku_duel_of_instance_1_action_2_actor_1 clr_province_flag = th_danmaku_duel_of_instance_1_action_1_actor_1 }
				th_danmaku_duel_of_instance_1_action_1_actor_2 = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_actor_2 set_province_flag = th_danmaku_duel_of_instance_1_action_2_actor_2 clr_province_flag = th_danmaku_duel_of_instance_1_action_1_actor_2 }
			}
			trigger_switch = {
				on_trigger = has_province_flag
				th_danmaku_duel_of_instance_1_action_1_ability_verb_NULL = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_verb_NULL set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_verb_NULL clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_NULL }
				th_danmaku_duel_of_instance_1_action_1_ability_verb_uses = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_verb_uses set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_verb_uses clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_uses }
				th_danmaku_duel_of_instance_1_action_1_ability_verb_performs = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_verb_performs set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_verb_performs clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_performs }
				th_danmaku_duel_of_instance_1_action_1_ability_verb_casts = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_verb_casts set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_verb_casts clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_casts }
				th_danmaku_duel_of_instance_1_action_1_ability_verb_enchants = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_verb_enchants set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_verb_enchants clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_enchants }
				th_danmaku_duel_of_instance_1_action_1_ability_verb_curses = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_verb_curses set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_verb_curses clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_curses }
				th_danmaku_duel_of_instance_1_action_1_ability_verb_strikes = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_verb_strikes set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_verb_strikes clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_strikes }
				th_danmaku_duel_of_instance_1_action_1_ability_verb_shoots = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_verb_shoots set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_verb_shoots clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_shoots }
				th_danmaku_duel_of_instance_1_action_1_ability_verb_attacks = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_verb_attacks set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_verb_attacks clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_verb_attacks }
			}
			trigger_switch = {
				on_trigger = has_province_flag
				th_danmaku_duel_of_instance_1_action_1_ability_article_NULL = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_article_NULL set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_article_NULL clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_article_NULL }
				th_danmaku_duel_of_instance_1_action_1_ability_article_undefined = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_article_undefined set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_article_undefined clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_article_undefined }
				th_danmaku_duel_of_instance_1_action_1_ability_article_defined = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_article_defined set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_article_defined clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_article_defined }
			}
			trigger_switch = {
				on_trigger = has_province_flag
				th_danmaku_duel_of_instance_1_action_1_ability_NULL = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_NULL set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_NULL clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_NULL }
				th_danmaku_duel_of_instance_1_action_1_ability_attack = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_attack set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_attack clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_attack }
			}
			trigger_switch = {
				on_trigger = has_province_flag
				th_danmaku_duel_of_instance_1_action_1_preposition_NULL = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_preposition_NULL set_province_flag = th_danmaku_duel_of_instance_1_action_2_preposition_NULL clr_province_flag = th_danmaku_duel_of_instance_1_action_1_preposition_NULL }
				th_danmaku_duel_of_instance_1_action_1_preposition_against = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_preposition_against set_province_flag = th_danmaku_duel_of_instance_1_action_2_preposition_against clr_province_flag = th_danmaku_duel_of_instance_1_action_1_preposition_against }
				th_danmaku_duel_of_instance_1_action_1_preposition_on = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_preposition_on set_province_flag = th_danmaku_duel_of_instance_1_action_2_preposition_on clr_province_flag = th_danmaku_duel_of_instance_1_action_1_preposition_on }
			}
			trigger_switch = {
				on_trigger = has_province_flag
				th_danmaku_duel_of_instance_1_action_1_recipient_NULL = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_recipient_NULL set_province_flag = th_danmaku_duel_of_instance_1_action_2_recipient_NULL clr_province_flag = th_danmaku_duel_of_instance_1_action_1_recipient_NULL }
				th_danmaku_duel_of_instance_1_action_1_recipient_1 = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_recipient_1 set_province_flag = th_danmaku_duel_of_instance_1_action_2_recipient_1 clr_province_flag = th_danmaku_duel_of_instance_1_action_1_recipient_1 }
				th_danmaku_duel_of_instance_1_action_1_recipient_2 = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_recipient_2 set_province_flag = th_danmaku_duel_of_instance_1_action_2_recipient_2 clr_province_flag = th_danmaku_duel_of_instance_1_action_1_recipient_2 }
			}
			trigger_switch = {
				on_trigger = has_province_flag
				th_danmaku_duel_of_instance_1_action_1_ability_effect_NULL = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_effect_NULL set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_effect_NULL clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_NULL }
				th_danmaku_duel_of_instance_1_action_1_ability_effect_miss = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_effect_miss set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_effect_miss clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_miss }
				th_danmaku_duel_of_instance_1_action_1_ability_effect_dealing = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_effect_dealing set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_effect_dealing clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_dealing }
				th_danmaku_duel_of_instance_1_action_1_ability_effect_healing = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_effect_healing set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_effect_healing clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_healing }
				th_danmaku_duel_of_instance_1_action_1_ability_effect_restore = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_effect_restore set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_effect_restore clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_restore }
				th_danmaku_duel_of_instance_1_action_1_ability_effect_afflicting_condition = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_effect_afflicting_condition set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_effect_afflicting_condition clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_afflicting_condition }
				th_danmaku_duel_of_instance_1_action_1_ability_effect_gaining_condition = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_effect_gaining_condition set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_effect_gaining_condition clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_effect_gaining_condition }
			}
			trigger_switch = {
				on_trigger = has_province_flag
				th_danmaku_duel_of_instance_1_action_1_number_impact_NULL = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_number_impact_NULL set_province_flag = th_danmaku_duel_of_instance_1_action_2_number_impact_NULL clr_province_flag = th_danmaku_duel_of_instance_1_action_1_number_impact_NULL }
				th_danmaku_duel_of_instance_1_action_1_number_impact_yes = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_number_impact_yes set_province_flag = th_danmaku_duel_of_instance_1_action_2_number_impact_yes clr_province_flag = th_danmaku_duel_of_instance_1_action_1_number_impact_yes }
			}
			trigger_switch = {
				on_trigger = has_province_flag
				th_danmaku_duel_of_instance_1_action_1_is_damage_NULL = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_is_damage_NULL set_province_flag = th_danmaku_duel_of_instance_1_action_2_is_damage_NULL clr_province_flag = th_danmaku_duel_of_instance_1_action_1_is_damage_NULL }
				th_danmaku_duel_of_instance_1_action_1_is_damage_yes = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_is_damage_yes set_province_flag = th_danmaku_duel_of_instance_1_action_2_is_damage_yes clr_province_flag = th_danmaku_duel_of_instance_1_action_1_is_damage_yes }
			}
			trigger_switch = {
				on_trigger = has_province_flag
				th_danmaku_duel_of_instance_1_action_1_is_health_NULL = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_is_health_NULL set_province_flag = th_danmaku_duel_of_instance_1_action_2_is_health_NULL clr_province_flag = th_danmaku_duel_of_instance_1_action_1_is_health_NULL }
				th_danmaku_duel_of_instance_1_action_1_is_health_yes = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_is_health_yes set_province_flag = th_danmaku_duel_of_instance_1_action_2_is_health_yes clr_province_flag = th_danmaku_duel_of_instance_1_action_1_is_health_yes }
			}
			trigger_switch = {
				on_trigger = has_province_flag
				th_danmaku_duel_of_instance_1_action_1_is_mana_NULL = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_is_mana_NULL set_province_flag = th_danmaku_duel_of_instance_1_action_2_is_mana_NULL clr_province_flag = th_danmaku_duel_of_instance_1_action_1_is_mana_NULL }
				th_danmaku_duel_of_instance_1_action_1_is_mana_yes = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_is_mana_yes set_province_flag = th_danmaku_duel_of_instance_1_action_2_is_mana_yes clr_province_flag = th_danmaku_duel_of_instance_1_action_1_is_mana_yes }
			}
			trigger_switch = {
				on_trigger = has_province_flag
				th_danmaku_duel_of_instance_1_action_1_is_action_points_NULL = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_is_action_points_NULL set_province_flag = th_danmaku_duel_of_instance_1_action_2_is_action_points_NULL clr_province_flag = th_danmaku_duel_of_instance_1_action_1_is_action_points_NULL }
				th_danmaku_duel_of_instance_1_action_1_is_action_points_yes = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_is_action_points_yes set_province_flag = th_danmaku_duel_of_instance_1_action_2_is_action_points_yes clr_province_flag = th_danmaku_duel_of_instance_1_action_1_is_action_points_yes }
			}
			trigger_switch = {
				on_trigger = has_province_flag
				th_danmaku_duel_of_instance_1_action_1_is_critical_NULL = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_is_critical_NULL set_province_flag = th_danmaku_duel_of_instance_1_action_2_is_critical_NULL clr_province_flag = th_danmaku_duel_of_instance_1_action_1_is_critical_NULL }
				th_danmaku_duel_of_instance_1_action_1_is_critical_yes = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_is_critical_yes set_province_flag = th_danmaku_duel_of_instance_1_action_2_is_critical_yes clr_province_flag = th_danmaku_duel_of_instance_1_action_1_is_critical_yes }
			}
			trigger_switch = {
				on_trigger = has_province_flag
				th_danmaku_duel_of_instance_1_action_1_is_miss_NULL = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_is_miss_NULL set_province_flag = th_danmaku_duel_of_instance_1_action_2_is_miss_NULL clr_province_flag = th_danmaku_duel_of_instance_1_action_1_is_miss_NULL }
				th_danmaku_duel_of_instance_1_action_1_is_miss_yes = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_is_miss_yes set_province_flag = th_danmaku_duel_of_instance_1_action_2_is_miss_yes clr_province_flag = th_danmaku_duel_of_instance_1_action_1_is_miss_yes }
			}
			trigger_switch = {
				on_trigger = has_province_flag
				th_danmaku_duel_of_instance_1_action_1_hit_roll_NULL = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_hit_roll_NULL set_province_flag = th_danmaku_duel_of_instance_1_action_2_hit_roll_NULL clr_province_flag = th_danmaku_duel_of_instance_1_action_1_hit_roll_NULL }
				th_danmaku_duel_of_instance_1_action_1_hit_roll_yes = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_hit_roll_yes set_province_flag = th_danmaku_duel_of_instance_1_action_2_hit_roll_yes clr_province_flag = th_danmaku_duel_of_instance_1_action_1_hit_roll_yes }
			}
			trigger_switch = {
				on_trigger = has_province_flag
				th_danmaku_duel_of_instance_1_action_1_ability_roll_NULL = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_roll_NULL set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_roll_NULL clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_roll_NULL }
				th_danmaku_duel_of_instance_1_action_1_ability_roll_yes = { custom_tooltip = set_province_flag_th_danmaku_duel_of_instance_1_action_2_ability_roll_yes set_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_roll_yes clr_province_flag = th_danmaku_duel_of_instance_1_action_1_ability_roll_yes }
			}
		}
	}
}

province_event = {
	id = th_danmaku_test_event.4
	title = none
	desc = none
	picture = TANYA_eventPicture
	is_triggered_only = yes
	trigger = {
		province_id = 1
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_actor_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_actor_1
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_actor_2
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_verb_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_verb_uses
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_verb_performs
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_verb_casts
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_verb_enchants
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_verb_curses
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_verb_strikes
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_verb_shoots
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_verb_attacks
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_article_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_article_undefined
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_article_defined
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_attack
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_preposition_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_preposition_against
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_preposition_on
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_recipient_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_recipient_1
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_recipient_2
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_effect_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_effect_miss
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_effect_dealing
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_effect_healing
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_effect_restore
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_effect_afflicting_condition
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_effect_gaining_condition
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_number_impact_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_number_impact_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_is_damage_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_is_damage_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_is_health_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_is_health_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_is_mana_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_is_mana_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_is_action_points_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_is_action_points_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_is_critical_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_is_critical_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_is_miss_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_is_miss_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_hit_roll_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_hit_roll_yes
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_roll_NULL
		has_province_flag = th_danmaku_duel_of_instance_1_action_2_ability_roll_yes
	}
	option = {
		ai_chance = {
			factor = 1
		}
	}
}

province_event = {
	id = th_danmaku_test_event.5
	title = none
	desc = none
	picture = TANYA_eventPicture
	is_triggered_only = yes
	trigger = {
		province_id = 1
		check_variable = { which = th_danmaku_duel_of_instance_1_action_2_value	 					value = 0.01 }
		check_variable = { which = th_danmaku_duel_of_instance_1_action_2_hit_die	 					value = 0.01 }
		check_variable = { which = th_danmaku_duel_of_instance_1_action_2_hit_die_amount	 			value = 0.01 }
		check_variable = { which = th_danmaku_duel_of_instance_1_action_2_hit_die_result	 			value = 0.01 }
		check_variable = { which = th_danmaku_duel_of_instance_1_action_2_enemy_ac	 					value = 0.01 }
		check_variable = { which = th_danmaku_duel_of_instance_1_action_2_hit_die_flat_bonus	 		value = 0.01 }
		check_variable = { which = th_danmaku_duel_of_instance_1_action_2_hit_die_bonus_per_roll	 	value = 0.01 }
		check_variable = { which = th_danmaku_duel_of_instance_1_action_2_attack_die	 				value = 0.01 }
		check_variable = { which = th_danmaku_duel_of_instance_1_action_2_attack_die_amount	 		value = 0.01 }
		check_variable = { which = th_danmaku_duel_of_instance_1_action_2_attack_die_result	 		value = 0.01 }
		check_variable = { which = th_danmaku_duel_of_instance_1_action_2_attack_die_bonus_per_roll	value = 0.01 }
		check_variable = { which = th_danmaku_duel_of_instance_1_action_2_attack_die_flat_bonus	 	value = 0.01 }
		check_variable = { which = th_danmaku_duel_of_instance_1_action_2_resistance_reduction	 		value = 0.01 }
	}
	option = {
		1 = {
			set_variable = { which = th_danmaku_duel_of_instance_1_action_2_value 						value = 3 }
			set_variable = { which = th_danmaku_duel_of_instance_1_action_2_hit_die						value = 3 }
			set_variable = { which = th_danmaku_duel_of_instance_1_action_2_hit_die_amount				value = 3 }
			set_variable = { which = th_danmaku_duel_of_instance_1_action_2_hit_die_result				value = 3 }
			set_variable = { which = th_danmaku_duel_of_instance_1_action_2_enemy_ac					value = 3 }
			set_variable = { which = th_danmaku_duel_of_instance_1_action_2_hit_die_flat_bonus			value = 3 }
			set_variable = { which = th_danmaku_duel_of_instance_1_action_2_hit_die_bonus_per_roll		value = 3 }
			set_variable = { which = th_danmaku_duel_of_instance_1_action_2_attack_die					value = 3 }
			set_variable = { which = th_danmaku_duel_of_instance_1_action_2_attack_die_amount			value = 3 }
			set_variable = { which = th_danmaku_duel_of_instance_1_action_2_attack_die_result			value = 3 }
			set_variable = { which = th_danmaku_duel_of_instance_1_action_2_attack_die_bonus_per_roll	value = 3 }
			set_variable = { which = th_danmaku_duel_of_instance_1_action_2_attack_die_flat_bonus		value = 3 }
			set_variable = { which = th_danmaku_duel_of_instance_1_action_2_resistance_reduction		value = 3 }
		}
		ai_chance = {
			factor = 1
		}
	}
}

province_event = {
	id = th_danmaku_test_event.6
	title = none
	desc = none
	picture = TANYA_eventPicture
	is_triggered_only = yes
	trigger = {
		province_id = 1
		th_combat_log_get_ability_is_miss = { instance = 1 action = 1 is_miss = yes }
		th_combat_log_get_ability_is_miss = { instance = 1 action = 2 is_miss = yes }
		th_combat_log_get_ability_is_miss = { instance = 1 action = 3 is_miss = yes }
	}
	option = {
		ai_chance = {
			factor = 1
		}
	}
}

province_event = {
	id = th_danmaku_test_event.7
	title = none
	desc = none
	picture = TANYA_eventPicture
	is_triggered_only = yes
	trigger = {
		province_id = 1
		th_combat_log_check_flags = { instance = 11 action = 1 }
		th_combat_log_check_flags = { instance = 12 action = 1 }
		th_combat_log_check_flags = { instance = 13 action = 1 }
		th_combat_log_check_flags = { instance = 14 action = 1 }
		th_combat_log_check_flags = { instance = 15 action = 1 }
	}
	option = {
		ai_chance = {
			factor = 1
		}
	}
}

province_event = {
	id = th_danmaku_test_event.8
	title = none
	desc = none
	picture = TANYA_eventPicture
	is_triggered_only = yes
	trigger = {
		province_id = 1
		th_combat_log_check_flags = { instance = 16 action = 1 }
		th_combat_log_check_flags = { instance = 17 action = 1 }
		th_combat_log_check_flags = { instance = 18 action = 1 }
		th_combat_log_check_flags = { instance = 19 action = 1 }
		th_combat_log_check_flags = { instance = 20 action = 1 }
	}
	option = {
		ai_chance = {
			factor = 1
		}
	}
}

province_event = {
	id = th_danmaku_test_event.9
	title = none
	desc = none
	picture = TANYA_eventPicture
	is_triggered_only = yes
	trigger = {
		province_id = 1
		th_combat_log_check_flags = { instance = 21 action = 1 }
		th_combat_log_check_flags = { instance = 22 action = 1 }
		th_combat_log_check_flags = { instance = 23 action = 1 }
		th_combat_log_check_flags = { instance = 24 action = 1 }
		th_combat_log_check_flags = { instance = 25 action = 1 }
	}
	option = {
		ai_chance = {
			factor = 1
		}
	}
}

province_event = {
	id = th_danmaku_test_event.10
	title = none
	desc = none
	picture = TANYA_eventPicture
	is_triggered_only = yes
	trigger = {
		province_id = 1
		th_combat_log_check_flags = { instance = 26 action = 1 }
		th_combat_log_check_flags = { instance = 27 action = 1 }
		th_combat_log_check_flags = { instance = 28 action = 1 }
		th_combat_log_check_flags = { instance = 29 action = 1 }
		th_combat_log_check_flags = { instance = 30 action = 1 }
	}
	option = {
		ai_chance = {
			factor = 1
		}
	}
}


country_event = {
	id = th_danmaku_test_event.11
	title = none
	desc = th_danmaku_test_event.11.desc
	picture = TANYA_eventPicture
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { NOT = { has_country_flag = set_variables } }
			set_variable = {
				which = die_type
				value = 10
			}
			set_variable = {
				which = die_amount
				value = 3
			}
			set_variable = {
				which = die_amount_2
				value = 1
			}
			set_variable = {
				which = bonus_per_roll
				value = 2
			}
			set_variable = {
				which = final_result
				value = 0
			}
			set_variable = {
				which = total_results
				value = 0
			}
			set_country_flag = set_variables
		}
		else = {
			change_variable = {
				which = total_results
				which = final_result
			}
		}
	}
	option = {
		set_variable = {
			which = final_result
			value = 0
		}
		th_roll_die = {
			die_type = die_type
			die_amount = die_amount
			bonus_per_roll = bonus_per_roll
			result = final_result
		}
	}
	option = {
		set_variable = {
			which = final_result
			value = 0
		}
		th_roll_die = {
			die_type = die_type
			die_amount = die_amount_2
			bonus_per_roll = bonus_per_roll
			result = final_result
		}
	}
	option = {
		set_variable = {
			which = final_result
			value = 0
		}
		th_generate_random_number = {
			rng_variable = final_result
			modulo = die_type
		}
	}
}