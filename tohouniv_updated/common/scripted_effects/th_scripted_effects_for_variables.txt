###GENERAL STUFF WITH VARIABLES###

th_set_countrys_compare_variable_to_own_variable = {
	#This function counts your own variable, which is made for counting, down while increasing the counter variable of $who$
	#Kinda redundant now though because you can just use 'who = ROOT' and 'who = FROM' to get the variable values of another scope to your own
	while = {
		limit = {
			check_variable = {
				which = $root_counting_variable$
				value = 1
			}
		}
		$who$ = {
			change_variable = {
				which = $who_counting_variable$
				value = 1
			}
		}
		subtract_variable = {
			which = $root_counting_variable$
			value = 1
		}
	}
}

###EIT VARIABLE###

th_eit_set_aggressor_counter = {
	set_variable = {
		which = th_eit_aggressor_counter
		value = 0.0
	}
}

th_eit_increment_aggresssor_counter = {
	if = {
		limit = {
			th_eit_has_max_aggressors = no
		}
		change_variable = {
			which = th_eit_aggressor_counter
			value = 1.0
		}
	}
}

th_eit_decrement_aggressor_counter = {
	if = {
		limit = {
			th_eit_has_at_least_one_aggressor = yes
		}
		subtract_variable = {
			which = th_eit_aggressor_counter
			value = 1.0
		}
	}
}

###FUJ VARIABLE###

th_fuj_set_volcano_counter = {
	set_variable = {
		which = th_fuj_volcano_counter
		value = 0.0
	}
}

th_fuj_increment_volcano_counter = {
	custom_tooltip = th_fuj_increment_volcano_counter.tt
	hidden_effect = {
		change_variable = {
			which = th_fuj_volcano_counter
			value = 1.0
		}
	} 
}

th_fuj_decrement_volcano_counter = {
	if = {
		limit = {
			th_fuj_has_n_volcanos = {
				value = 1
			}
		}
		custom_tooltip = th_fuj_decrement_volcano_counter.tt
		hidden_effect = {
			subtract_variable = {
				which = th_fuj_volcano_counter
				value = 1.0
			}
		}
	}
}

###EDUCATION INCREASE EVENT FREQUENCY###
th_increase_education_frequency = {
	custom_tooltip = th_increase_education_frequency_tt
	hidden_effect = {
		if = {
			limit = {
				NOT = { has_country_flag = th_education_setup }
			}
			set_country_flag = th_education_setup
			set_variable = {
				which = th_education_accelerator_variable
				value = 0
			}
		}
		change_variable = {
			which = th_education_accelerator_variable
			value = $value$
		}
	}
}

###MONARCH VARIABLE###
# Originally, only fairies were able to maintain their stats when respawning
# This changed, however, and now all Touhou rulers are able to respawn with increased stats
# Fairies are the only rulers, who are limited in how much their stats can grow though
th_set_ruler_max_stats = {
	set_variable = {
		which = th_ruler_max_adm_stat
		value = $max_possible_adm$
	}
	set_variable = {
		which = th_ruler_max_dip_stat
		value = $max_possible_dip$
	}
	set_variable = {
		which = th_ruler_max_mil_stat
		value = $max_possible_mil$
	}
}

th_increase_ruler_adm_stat = {
	if = {
		limit = {
			NOT = {
				check_variable = {
					which = th_ruler_adm_stat
					which = th_ruler_max_adm_stat
				}
			}
		}
		change_adm = $adm$
		custom_tooltip = th_stat_remains_after_respawn_ruler_tt
		hidden_effect = {
			change_variable = {
				which = th_ruler_adm_stat
				value = $adm$
			}
			change_variable = {
				which = th_ruler_total_power
				value = $adm$
			}
		}
	}
	else = {
		add_adm_power = 75
	}
}

th_increase_ruler_dip_stat = {
	if = {
		limit = {
			NOT = {
				check_variable = {
					which = th_ruler_dip_stat
					which = th_ruler_max_dip_stat
				}
			}
		}
		change_dip = $dip$
		custom_tooltip = th_stat_remains_after_respawn_ruler_tt
		hidden_effect = {
			change_variable = {
				which = th_ruler_dip_stat
				value = $dip$
			}
			change_variable = {
				which = th_ruler_total_power
				value = $dip$
			}
		}
	}
	else = {
		add_dip_power = 75
	}
}

th_increase_ruler_mil_stat = {
	if = {
		limit = {
			NOT = {
				check_variable = {
					which = th_ruler_mil_stat
					which = th_ruler_max_mil_stat
				}
			}
		}
		change_mil = $mil$
		custom_tooltip = th_stat_remains_after_respawn_ruler_tt
		hidden_effect = {
			change_variable = {
				which = th_ruler_mil_stat
				value = $mil$
			}
			change_variable = {
				which = th_ruler_total_power
				value = $mil$
			}
		}
	}
	else = {
		add_mil_power = 75
	}
}

th_set_heir_max_stats = {
	set_variable = {
		which = th_heir_max_adm_stat
		value = $max_possible_adm$
	}
	set_variable = {
		which = th_heir_max_dip_stat
		value = $max_possible_dip$
	}
	set_variable = {
		which = th_heir_max_mil_stat
		value = $max_possible_mil$
	}
}

th_increase_heir_adm_stat = {
	if = {
		limit = {
			NOT = {
				check_variable = {
					which = th_heir_adm_stat
					which = th_heir_max_adm_stat
				}
			}
		}
		change_heir_adm = $adm$
		custom_tooltip = th_stat_remains_after_respawn_heir_tt
		hidden_effect = {
			change_variable = {
				which = th_heir_adm_stat
				value = $adm$
			}
			change_variable = {
				which = th_heir_total_power
				value = $adm$
			}
		}
	}
	else = {
		add_adm_power = 50
	}
}

th_increase_heir_dip_stat = {
	if = {
		limit = {
			NOT = {
				check_variable = {
					which = th_heir_dip_stat
					which = th_heir_max_dip_stat
				}
			}
		}
		change_heir_dip = $dip$
		custom_tooltip = th_stat_remains_after_respawn_heir_tt
		hidden_effect = {
			change_variable = {
				which = th_heir_dip_stat
				value = $dip$
			}
			change_variable = {
				which = th_heir_total_power
				value = $dip$
			}
		}
	}
	else = {
		add_dip_power = 50
	}
}

th_increase_heir_mil_stat = {
	if = {
		limit = {
			NOT = {
				check_variable = {
					which = th_heir_mil_stat
					which = th_heir_max_mil_stat
				}
			}
		}
		change_heir_mil = $mil$
		custom_tooltip = th_stat_remains_after_respawn_heir_tt
		hidden_effect = {
			change_variable = {
				which = th_heir_mil_stat
				value = $mil$
			}
			change_variable = {
				which = th_heir_total_power
				value = $mil$
			}
		}
	}
	else = {
		add_mil_power = 50
	}
}

#Use this scripted in the on_actions file, on_battle_won_country
th_count_won_battles_and_reward_at_end = {
	if = {
		limit = {
			ROOT = {
				has_country_flag = $counting_flag$
			}
		}
		ROOT = {
			change_variable = {
				which = $variable$
				value = 1
			}
		}
	}
	if = {
		limit = {
			ROOT = {
				has_country_flag = $counting_flag$
				check_variable = {
					which = $variable$
					value = $max_value$
				}
			}
		}
		ROOT = {
			clr_country_flag = $counting_flag$
			country_event = {
				id = $country_event$
			}
		}
	}
}

###FAIRY PIRATE VARIABLES###
th_pirate_initialize_variables = {
	set_variable = {
		which = th_pirate_fame_points
		value = 0
	}
}

th_pirate_increase_fame_by_10 = {
	custom_tooltip = th_pirate_increase_fame_by_10_tt
	if = {
		limit = {
			has_country_flag = th_initiated_pirate_influence_variable
		}
		hidden_effect = {
			change_variable = {
				which = th_pirate_fame_points
				value = 10
			}
		}
	}
	else = {
		hidden_effect = {
			set_country_flag = th_initiated_pirate_influence_variable
			set_variable = {
				which = th_pirate_fame_points
				value = 10
			}
		}
	}
}

th_pirate_add_prank_fame = {
	if = {
		limit = {
			has_country_flag = th_initiated_pirate_influence_variable
			NOT = {
				check_variable = {
					which = th_pirate_fame_points
					value = 100
				}
			}
		}
		change_variable = {
			which = th_pirate_fame_points
			value = 0.5
		}
	}
}

th_pirate_add_raid_fame = {
	if = {
		limit = {
			has_country_flag = th_initiated_pirate_influence_variable
			NOT = {
				check_variable = {
					which = th_pirate_fame_points
					value = 100
				}
			}
		}
		change_variable = {
			which = th_pirate_fame_points
			value = 0.25
		}
	}
}

th_pirate_add_conquer_fame = {
	if = {
		limit = {
			has_country_flag = th_initiated_pirate_influence_variable
			NOT = {
				check_variable = {
					which = th_pirate_fame_points
					value = 100
				}
			}
		}
		change_variable = {
			which = th_pirate_fame_points
			value = 0.25
		}
	}
}

###SFF VARIABLES###

th_sff_initiate_flower_counter = {
	set_variable = {
		which = sff_flower_counter
		value = 0
	}
}

th_sff_initiate_sun_garden_counter = {
	set_variable = {
		which = sff_sun_garden_counter
		value = 1
	}
}

th_sff_increment_flower_counter = {
	change_variable = {
		which = sff_flower_counter
		value = 1
	}
}

th_sff_increment_sun_garden_counter = {
	custom_tooltip = th_sff_increment_sun_garden_counter_tt
	hidden_effect = {
		change_variable = {
			which = sff_sun_garden_counter
			value = 1
		}
	}
}