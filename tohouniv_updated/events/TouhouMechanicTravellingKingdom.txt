########################################
# Events for the travelling kingdom mechanic
########################################

namespace = th_travelling_kingdom_mechanic

#Give provinces back which are not capital
country_event = {
	id = th_travelling_kingdom_mechanic.1
	title = th_travelling_kingdom_mechanic.1.t
	desc = th_travelling_kingdom_mechanic.1.desc
	picture = KOIFLAN_eventPicture

	trigger = {
		has_government_attribute = disables_settled_property
		any_owned_province = {
			NOT = { is_capital_of = ROOT }
			NOT = { has_province_flag = th_target_for_migration }
		}
	}

	mean_time_to_happen = {
		days = 0
	}

	hidden = yes

	immediate = {
		every_owned_province = {
			limit = {
				NOT = { is_capital_of = ROOT }
				NOT = { has_province_flag = th_target_for_migration }
			}
			#transfer dev to KMJ and mark them as unusable	#TODO for later update
			remove_core = ROOT
		}
	}

	option = {
		name = th_travelling_kingdom_mechanic.1.a
		release_all_subjects = yes	#Release all possible countries

		ai_chance = {
			factor = 1
		}
	}

	after = {
		every_owned_province = {
			limit = {
				NOT = { is_capital_of = ROOT }
				NOT = { has_province_flag = th_target_for_migration }
			}
			if = {	#Province goes to the country with its core on it
				limit = {
					any_country = {
						is_core = PREV
					}
				}
				random_country = {
					limit = {
						is_core = PREV
					}
					PREV = {
						cede_province = PREV	#Looks worse than it is. It basically means that the province will target a random country and transfer itself to the selected country
					}
				}
			}
			else_if = {	#Provinces goes to the next best who has a claim on it
				limit = {
					any_country = {
						is_claim = PREV
					}
				}
				random_country = {
					limit = {
						is_claim = PREV
					}
					PREV = {
						cede_province = PREV
					}
				}
			}
			else_if = {	#If province still is in KMJ's possession then give it to the next best country
				limit = {
					any_country = {
						NOT = {
							border_distance = {
								who = ROOT
								distance = 300
							}
						}
					}
				}
				random_country = {
					limit = {
						NOT = {
							border_distance = {
								who = ROOT
								distance = 300
							}
						}
					}
					PREV = {
						cede_province = PREV
					}
				}
			}
		}
	}
}

#Release all subjects immediately
country_event = {
	id = th_travelling_kingdom_mechanic.2
	title = th_travelling_kingdom_mechanic.2.t
	desc = th_travelling_kingdom_mechanic.2.desc
	picture = KOIFLAN_eventPicture

	trigger = {
		has_government_attribute = disables_settled_property
		any_country = {
			is_subject_of = ROOT
		}
	}

	mean_time_to_happen = {
		days = 0
	}

	hidden = yes

	option = {
		name = th_travelling_kingdom_mechanic.2.a
		every_subject_country = {
			ROOT = {
				release = PREV
			}
		}

		ai_chance = {
			factor = 1
		}
	}
}

#Claim immunity
country_event = {
	id = th_travelling_kingdom_mechanic.3
	title = "th_travelling_kingdom_mechanic.3.t"
	desc = "th_travelling_kingdom_mechanic.3.desc"
	picture = SHRINE_eventPicture

	hidden = yes

	trigger = {
		any_province = {
			NOT = { owned_by = ROOT }
			is_capital = yes
			OR = {
				is_core = ROOT
				is_claim = ROOT
			}
			NOT = { is_permanent_claim = ROOT }
			owner = {
				has_government_attribute = enables_claim_immunity
			}
		}
	}
	
	mean_time_to_happen = {
		months = 1
	}

	option = {
		name = "th_travelling_kingdom_mechanic.3.a"
		random_province = {
			limit = {
				NOT = { owned_by = ROOT }
				is_capital = yes
				OR = {
					is_core = ROOT
					is_claim = ROOT
				}
				NOT = { is_permanent_claim = ROOT }
				owner = {
					has_government_attribute = enables_claim_immunity
				}
			}
			if = {
				limit = {
					is_core = ROOT
				}
				remove_core = ROOT
			}
			if = {
				limit = {
					is_claim = ROOT
				}
				remove_claim = ROOT
			}
		}

		ai_chance = {
			factor = 100
		}
	}
}

#Wandering mechanics - make sure that the event_target for capital is up-to-date
country_event = {
	id = th_travelling_kingdom_mechanic.4
	title = "th_travelling_kingdom_mechanic.4.t"
	desc = "th_travelling_kingdom_mechanic.4.desc"
	picture = SHRINE_eventPicture

	trigger = {
		has_government_attribute = enables_migration_through_countries
		event_target:kmj_capital = {
			NOT = { is_capital_of = ROOT }
		}
	}

	mean_time_to_happen = {
		days = 0
	}

	hidden = yes

	immediate = {
		if = {
			limit = {
				any_province = {
					has_province_flag = th_has_migrated_dev
					NOT = { owned_by = ROOT }
				}
			}
			random_province = {
				limit = {
					has_province_flag = th_has_migrated_dev
					NOT = { owned_by = ROOT }
				}
				save_event_target_as = kmj_previous_capital
			}
		}
	}

	option = {
		name = th_travelling_kingdom_mechanic.4.a
		if = {
			limit = {
				any_province = {
					has_province_flag = th_has_migrated_dev
					NOT = { owned_by = ROOT }
				}
			}
			event_target:kmj_previous_capital = {
				th_reset_province = yes
			}
			event_target:kmj_previous_owner = {
				event_target:kmj_previous_capital = {
					add_core = PREV
					cede_province = PREV
					remove_core = ROOT
				}
			}
		}
		capital_scope = {
			save_global_event_target_as = kmj_capital
			if = {
				limit = {
					NOT = { has_province_flag = th_has_migrated_dev }
				}
				th_update_new_kmj_capital = yes
			}
		}

		ai_chance = {
			factor = 1
		}
	}
}

#Wandering mechanics - claiming capitals is illegal
country_event = {
	id = th_travelling_kingdom_mechanic.5
	title = "th_travelling_kingdom_mechanic.5.t"
	desc = "th_travelling_kingdom_mechanic.5.desc"
	picture = SHRINE_eventPicture

	trigger = {
		has_government_attribute = enables_migration_through_countries
		capital_scope = {
			any_neighbor_province = {
				is_claim = ROOT
				is_capital = yes
			}
		}
	}

	mean_time_to_happen = {
		days = 0
	}

	immediate = {
		capital_scope = {
			random_neighbor_province = {
				limit = {
					is_claim = ROOT
					is_capital = yes
				}
				remove_claim = ROOT
			}
		}
	}

	hidden = yes

	option = {
		name = th_travelling_kingdom_mechanic.5.a

		ai_chance = {
			factor = 1
		}
	}
}

#Wandering mechanics - move to claimed province
country_event = {
	id = th_travelling_kingdom_mechanic.6
	title = "th_travelling_kingdom_mechanic.6.t"
	desc = "th_travelling_kingdom_mechanic.6.desc"
	picture = SHRINE_eventPicture

	trigger = {
		has_government_attribute = enables_migration_through_countries
		is_at_war = no
		capital_scope = {
			any_neighbor_province = {
				is_claim = ROOT
				is_capital = no
			}
		}
	}

	mean_time_to_happen = {
		days = 0
	}

	immediate = {
		capital_scope = {
			random_neighbor_province = {
				limit = {
					is_claim = ROOT
					is_capital = no
				}
				owner = {
					save_event_target_as = kmj_temp_next_previous_owner
				}
				save_event_target_as = kmj_next_province
				set_province_flag = th_target_for_migration
			}
			save_event_target_as = kmj_previous_capital
		}
		event_target:kmj_next_province = {
			cede_province = ROOT
			add_core = ROOT
			th_save_province_as_new_kmj_capital = yes
		}
		set_capital = event_target:kmj_capital
	}

	hidden = yes

	option = {
		name = th_travelling_kingdom_mechanic.6.a
		event_target:kmj_previous_capital = {
			th_reset_province = yes
		}
		event_target:kmj_previous_owner = {
			event_target:kmj_previous_capital = {
				add_core = PREV
				cede_province = PREV
				remove_core = ROOT
			}
		}


		ai_chance = {
			factor = 1
		}
	}

	after = {
		event_target:kmj_capital = {
			th_save_development_of_province = yes
			th_update_new_kmj_capital = yes
		}
		event_target:kmj_temp_next_previous_owner = {
			save_global_event_target_as = kmj_previous_owner
		}
	}
}

#Wandering mechanics - claiming during war is illegal
country_event = {
	id = th_travelling_kingdom_mechanic.7
	title = "th_travelling_kingdom_mechanic.7.t"
	desc = "th_travelling_kingdom_mechanic.7.desc"
	picture = SHRINE_eventPicture

	trigger = {
		has_government_attribute = enables_migration_through_countries
		capital_scope = {
			any_neighbor_province = {
				is_claim = ROOT
			}
		}
		is_at_war = yes
	}

	mean_time_to_happen = {
		days = 0
	}

	immediate = {
		capital_scope = {
			random_neighbor_province = {
				limit = {
					is_claim = ROOT
				}
				remove_claim = ROOT
			}
		}
	}

	hidden = yes

	option = {
		name = th_travelling_kingdom_mechanic.7.a

		ai_chance = {
			factor = 1
		}
	}
}